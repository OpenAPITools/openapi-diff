name: Main Build
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '.circleci/**'
      - '.github/**'
      - 'README.md'

env:
  OSS_USERNAME: ${{ secrets.OSS_USERNAME }}
  OSS_PASSWORD: ${{ secrets.OSS_PASSWORD }}

jobs:
  build:
    name: Build on JDK ${{ matrix.java_version }}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        java_version: ['8', '11', '15']
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
        # Value of the distributionManagement/repository/id field of the pom.xml
        server-id: sonatype-nexus-snapshots
        server-username: OSS_USERNAME
        server-password: OSS_PASSWORD
    - uses: actions/cache@v2.1.3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache SonarCloud packages
      uses: actions/cache@v2.1.3
      if: matrix.java_version == '11'
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Run tests
      run: ./mvnw -V -B -ntp -ff verify jacoco:report
    - name: Static Analysis (Sonar)
      if: matrix.java_version == '11'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw -B -ntp -ff org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
    - name: Release Snapshot
      if: matrix.java_version == '11'
      run: ./mvnw -V -B -ntp -ff deploy
