---
openapi: 3.0.3
info:
  title: Smart Manufacturing Operation Management Service API
  description: "Smart Manufacturing Operation Management Service provide a REST-API\
    \ to access and modify the resources via restful API [GET, POST, PUT, DELETE,\
    \ PATCH] using the path .../api/resources/...<BR>"
  contact:
    name: Contact and Support
    url: https://gec.io/kontakt/
    email: support@gec.io
  license:
    name: Commercial
    url: https://gec.io/
  version: 4.2.144-SNAPSHOT
tags: []
paths:
  /smartmom-svc/api/views/workorders/{id}:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the WorkorderView for a WorkorderId
      description: |-
        Get the WorkorderWorkplanView for a WorkorderId. The View contains the Head: Workorder, Part, WorkorderWorkplan and WorkorderBom and also the Workstep Structure with the Worksteps and the WorkstepPositionOrganizations (with optional locks) and the BomItems for each Workstep
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getWorkorderView
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderView'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/bomitems:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the needed Bom Items for a given Workorder
      description: |2-

        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getBomItemsForWorkorder
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepBomItemView'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/highestBookedWorkstep:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the highest booked Workstep in the workorder (PASS-bookings)
      description: |-
        Get the highest booked Workstep in the workorder (PASS-bookings) and returns this workstep including all WorkorderWorkstepOrganizationunit with bookings.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getHighestBookedWorkstep
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderHighestBookedWorkstep'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/organizationunits:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the OrganizationUnits that have been booked for a WorkorderId
      description: |2-

        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readOrganisationUnitsForWorkorder
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitView'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/productionProgress:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the Amount of produced Units so far based on the highest
        Workstep and WorkstepLocation for the given Workorder
      description: |-
        Get the Amount of produced Units based on serialBookings so far based on the highest Workstep and WorkstepLocation for the given Workorder<BR />Deprecated: Only supports serialunitbookings with one booking station per workstep. The delivered quantity is based on the station.When multiple station process the workstep the quantity of one of the booking stations is returned.<BR />Use these methode only in context of serialunitbookings with one booking station per workstep
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getProductionProgress
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderSerialunitBookingProductionProgress'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/serialunits:
    get:
      tags:
      - smom workorders views (private)
      summary: 'PRIVATE API reads all SerialUnits for one workorderId '
      description: |2-

        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readSerialUnitByWorkorder
      parameters:
      - $ref: '#/components/parameters/X-PlantId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          $ref: '#/components/responses/default_response'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serialunit'
        "400":
          $ref: '#/components/responses/ResponseCodeMapping400'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/components/responses/ResponseCodeMapping404'
        "405":
          $ref: '#/components/responses/ResponseCodeMapping405'
        "406":
          $ref: '#/components/responses/ResponseCodeMapping406'
        "409":
          $ref: '#/components/responses/ResponseCodeMapping409'
        "412":
          $ref: '#/components/responses/ResponseCodeMapping412'
        "417":
          $ref: '#/components/responses/ResponseCodeMapping417'
        "422":
          $ref: '#/components/responses/ResponseCodeMapping422'
        "500":
          $ref: '#/components/responses/ResponseCodeMapping500'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/q/logging-manager:
    summary: "Return info on all loggers, or a specific logger"
    description: Logging Manager Loggers
    get:
      tags:
      - system info (private)
      summary: Information on Logger(s)
      description: Get information on all loggers or a specific logger.
      operationId: logging_manager_get_all
      parameters:
      - name: loggerName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoggerInfo'
        "404":
          description: Not Found
    post:
      tags:
      - system info (private)
      summary: Update log level
      description: Update a log level for a certain logger
      operationId: logging_manager_update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                loggerName: {}
                loggerLevel:
                  $ref: '#/components/schemas/LoggerLevel'
      responses:
        "201":
          description: Created
  /smartmom-svc/q/logging-manager/levels:
    summary: Return all levels that is available
    description: All available levels
    get:
      tags:
      - system info (private)
      summary: Get all available levels
      description: This returns all possible log levels
      operationId: logging_manager_levels
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoggerLevel'
  /smartmom-svc/q/health:
    summary: MicroProfile Health provides a way for your application to distribute
      information about its healthiness state to state whether or not it is able to
      function properly
    description: MicroProfile Health Endpoint
    get:
      tags:
      - system info (private)
      summary: "An aggregated view of the Liveness, Readiness and Startup of this\
        \ application"
      description: Check the health of the application
      operationId: microprofile_health_root
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/live:
    summary: Liveness checks are utilized to tell whether the application should be
      restarted
    description: MicroProfile Health - Liveness Endpoint
    get:
      tags:
      - system info (private)
      summary: The Liveness check of this application
      description: Check the liveness of the application
      operationId: microprofile_health_liveness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/ready:
    summary: Readiness checks are used to tell whether the application is able to
      process requests
    description: MicroProfile Health - Readiness Endpoint
    get:
      tags:
      - system info (private)
      summary: The Readiness check of this application
      description: Check the readiness of the application
      operationId: microprofile_health_readiness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/started:
    summary: Startup checks are an used to tell when the application has started
    description: MicroProfile Health - Startup Endpoint
    get:
      tags:
      - system info (private)
      summary: The Startup check of this application
      description: Check the startup of the application
      operationId: microprofile_health_startup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
components:
  schemas:
    CounterBase:
      description: IdGenerators will count on this basis
      enum:
      - WORKORDER
      - PART
      - STATION
      - PLANT
      type: string
    ImportRTOUnidentifiableOrganizationUnitMessageDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    HistoryAssignmentCondition:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/AssignmentCondition'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    MaterialBookingView:
      description: "MaterialBookingView is a Join over MaterialBooking, MaterialBin,\
        \ MaterialBinPart, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSection:
          allOf:
          - $ref: '#/components/schemas/MaterialBinSection'
          - description: "Optional MaterialBinSection, only set if a setion is given\
              \ during the upload"
        materialBinSectionReference:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the MaterialBooking
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        quantity:
          format: double
          description: Quantity
          type: number
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Serialunit Id
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Serialunit Position
          type: string
        setupPosition:
          description: Setup Position
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    LoggerInfo:
      type: object
      properties:
        configuredLevel:
          $ref: '#/components/schemas/LoggerLevel'
        effectiveLevel:
          $ref: '#/components/schemas/LoggerLevel'
        name:
          type: string
    History:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          description: The audited entity
          type: object
        userName:
          description: Changing user
          type: string
      readOnly: true
    SmtSetupEquipmentDTO:
      description: "SmtEquipment used to place/process the (BOM)-Location of the SmtSetup-Data.<BR/>When\
        \ Equipment-FailurePareto based on (BOM)-Location should be used, each (BOM)-Location\
        \ has to be passed separately."
      required:
      - name
      - description
      - type
      - location
      - smtEquipmentSetupPosition
      type: object
      properties:
        description:
          description: Description of the SmtEquipment
          type: string
        location:
          description: BOM- Location that was placed/processed with this smtEquipment.<BR/>If
            not given the location of the MaterialBinBooking is used instead.
          type: string
        missPicks:
          format: int64
          description: "MissPicks - (delta) amount of failed attempts of placement\
            \ during this placement.<BR/>For example: No item could be collect or\
            \ the collected part could not be placed on the board"
          type: integer
        name:
          description: Name of the SmtEquipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Part Id of the smtEquipment (optional) can be used instead\
              \ of the partName, if the smtEquipment has to be created"
        partName:
          description: "Part Name of the smtEquipment, required if the smtEquipment\
            \ has to be created, or partId is given"
          type: string
        picks:
          format: int64
          description: Picks - (delta) amount of successful processed item with the
            SmtEquipment during this placement
          type: integer
        smtEquipmentSetupPosition:
          description: "SMT-Equipment SetupPosition, defines where the SmtEquipment\
            \ was setup, e.g. Nozzle on Head2-Pos1.<BR/>The Equipment SetupPosition\
            \ may be another one, that the setupPosition of the materialBin itself.<BR>If\
            \ not given the setupPosition of the MaterialBinBooking is used instead."
          type: string
        type:
          description: "Type of the SmtEquipment: Nozzle, Feeder, Head, ..."
          type: string
      deprecated: true
    WorkstepEquipmentAlternativeDTO:
      description: Alternatives for a equipment required at a workstep of a workorder
      required:
      - partName
      - usageProbability
      type: object
      properties:
        partName:
          description: Name of a equipment-part
          type: string
        quantity:
          format: int32
          type: integer
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: 100
          type: integer
    WorkorderWorkstepBomItem:
      description: BOMItems for a Workstep within a Workorder. Updates to a WorkorderWorkstepBomItem
        will be stored in an audit-trail.
      required:
      - location
      - setupRequired
      - materialPartId
      - quantity
      - unitId
      - workorderWorkstepId
      type: object
      properties:
        alternatives:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternative'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        location:
          description: "Location of Component on the Assembly (DE: Einbauort)"
          type: string
        masterBomItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding MasterData BomItem
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        payload:
          type: string
        processLocation:
          description: Location of the BomItem. Used for example to differ between
            solder side and component side
          type: string
        quantity:
          format: double
          type: number
        setupRequired:
          description: Setup is required for this BomItem
          default: true
          type: boolean
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding WorkorderWorkstep.
    MultipanelSerialunitHistoryView:
      description: View of the history of a multipanel with all serialunits it contained
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: created
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: MultipanelId
        multipanelName:
          description: MultipanelName
          type: string
        separated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: separated
        serialunits:
          description: serialunits
          type: array
          items:
            $ref: '#/components/schemas/MultipanelSerialunitView'
      readOnly: true
    WorkplanDTO:
      description: "Workplan-structure for an import workorder. If no worksteps are\
        \ defined in smom on release of the workorder, the workplan will be fetched\
        \ from masterdata and it's definition copied.\n * If a MasterWorkplanId is\
        \ given (see Workorder-Resource-API): Load Workplan from mdata for id. Else\
        \ \n * If a Workplan-name is given: Load newest Workplan from mdata for name\
        \ and erpVersion. Else \n * Load newest Workplan from mdata for workorder's\
        \ partId and erpVersion.\n\nOn update of a released workorder Workplan might\
        \ be changed with some restrictions: New worksteps may be added at the end,\
        \ but it's not allowed to delete worksteps."
      required:
      - workstepList
      type: object
      properties:
        erpVersion:
          type: string
        name:
          type: string
        workstepList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WorkstepDTO'
    SmtEquipmentBookingView:
      description: "SmtEquipmentBookingView is a Join over SmtEquipmentBooking, SmtEquipment,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        location:
          description: (BOM)-Location that was processed/placed with this smtEquipment
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        misspicks:
          format: int64
          description: MissPicks
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the smtEquipment
              to process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        picks:
          format: int64
          description: Picks
          type: integer
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        smtEquipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the SmtEquipmentBooking
        smtEquipmentDescription:
          description: Description of the SmtEquipment
          type: string
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
        smtEquipmentSetupPosition:
          description: the setupPosition the SmtEquipment was placed on
          type: string
        smtEquipmentType:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: Type of the SmtEquipment
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepLocation:
          type: string
        workstepNumber:
          description: WorkstepNumber the smtEquipment was used
          type: string
      readOnly: true
      deprecated: true
    LockedState:
      description: "Fixed defined states for a Lock. Values: NEVER, IS and WAS(in\
        \ the past)"
      enum:
      - NEVER_LOCKED
      - IS_LOCKED
      - WAS_LOCKED
      type: string
    EquipmentBookingView:
      description: "EquipmentBookingView is a Join over SerialunitEquipmentBooking,\
        \ Equipment, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date of this equipmentBooking
        equipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the equipmentBooking
        equipmentDescription:
          description: Description of the Equipment
          type: string
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equipment
        equipmentName:
          description: Name of the Equipment
          type: string
        equipmentPartDescription:
          description: Description of the EquipmentPart
          type: string
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the EquipmentPart
        equipmentPartName:
          description: Name of the EquipmentPart
          type: string
        equipmentSetupPosition:
          description: the setupPosition the equipment was placed on
          type: string
        equipmentTypeDescription:
          description: Description of the EquipmentType
          type: string
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of the Equipment
        equipmentTypeName:
          description: Name of the EquipmentType
          type: string
        failures:
          format: int32
          description: Failures booked with this booking
          type: integer
        failuresTotal:
          format: int32
          description: Total Failures of the equipment after this booking
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the Equipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the Equipment to
              process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the Equipment to
            process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        usages:
          format: int32
          description: Usages booked with this booking
          type: integer
        usagesTotal:
          format: int32
          description: Total Usages of the equipment after this booking
          type: integer
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepNumber:
          description: WorkstepNumber the Equipment was used
          type: string
      readOnly: true
    ProcessEquipmentBookingDTO:
      description: OrganizationUnit with a list of EquipmentBooking to book usages
        and failure counts for.
      required:
      - organizationUnitName
      - equipmentBookingDTOList
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: bookDate for the given equipment bookings. All bbokings have
              this same bookDate. if not given the server date is used.
        equipmentBookingDTOList:
          description: List of EquipmentBookings
          type: array
          items:
            description: EquipmentBooking for usage and failure-Count of an existing
              Equipment for a given SetupPosition at an OrganizationUnit
            required:
            - setupPosition
            - usages
            type: object
            properties:
              equipmentName:
                description: Name of the equipment to book the usages for.<BR/>Either
                  equipmentId or equipmentName is required.
                type: string
              equipmentId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id of the equipment to book the usages for. <BR />.Either
                    equipmentId or equipmentName is required.
              setupPosition:
                description: setupPosition where the equipment is located at the organizationUnit.<BR/>Only
                  one equipment can be used at a setupPosition of an organizationUnit
                  at a point in time.
                minLength: 1
                type: string
              usages:
                format: int32
                description: Number of usages of the equipment
                minimum: 1
                type: integer
              failures:
                format: int32
                description: Number of failed usages of the equipment
                minimum: 0
                type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that has done the equipment booking
              <BR/>.Either organizationUnitId or organizationUnitName is required.
        organizationUnitName:
          description: Name of the organizatinUnit that has done the equipment booking
            <BR/>Either organizationUnitId or organizationUnitName is required.
          type: string
    ImportBulkRTOMultipanelDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    ImportBulkRTOUnidentifiableWorkorderWorkstepBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item without id
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    WorkorderWorkstepMaterialBooking:
      description: MaterialBin setup at a setupPosition at an organizationUnit used
        during a WorkorderWorkstep Quantity Booking.<BR>One tulple is created for
        each materialBin set was setup during building the Units from kookDate-duration
        to rhe bookDate.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - materialBinId
      - location
      - materialPartId
      - quantity
      - unitId
      - workorderId
      - workorderWorkstepId
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        currentQuantity:
          format: double
          description: Current quantity of materialBin after booking
          type: number
          readOnly: true
        id:
          $ref: '#/components/schemas/WorkorderWorkstepMaterialBookingPk'
        location:
          description: "One BOM- Location that is processed with this materialBooking.If\
            \ multiple locations are processed with this booking, each individual\
            \ location has to be send in it's own materialBooking. If not given the\
            \ default:[-] is used."
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin used for this material booking
        materialBinSectionReferenceEnd:
          format: double
          description: Section of the materialBin used when the quantity is booked)
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Section of the materialBin used when during start of building
            the quantity)
          type: number
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the materialBin used for this material
              booking
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
        quantity:
          format: double
          description: "(Delta)-material quantity, that was consumed by this booking\
            \ from the materialBin"
          minimum: 0
          type: number
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the unit of materialBin used for this material booking
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    MaintenanceName:
      type: object
      properties:
        groupName:
          description: Name of the maintenanceIntervalGroup
          type: string
        intervalName:
          description: Name of the MaintenanceInterval in the group
          type: string
    OrganizationUnitWorkorderActivation:
      description: Current activation of an organizationUnit for a Workorder at a
        Workstep
      required:
      - organizationUnitId
      - workorderId
      - workorderWorkstepId
      - workorderWorkstepOrganizationUnitId
      - topOrganizationUnitId
      - userName
      - created
      - stamp
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that is activated for the workorder
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        stateBeforeActivation:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the WorkorderWorkstepOrganizationUnit before it
              was activated
            default: READY
        topOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit that was used for activation,\
              \ may be organizationUnit itself or a parent of the organizationUnit"
        userName:
          description: Ident of the User who has done the activation
          type: string
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the organizationunit is activated for
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the organizationunit is activated
              for
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of a WorkorderWorkstepOrganizationUnit, the entiy that\
              \ builds the reference between the OrganizationUnit and the Workorderworkstep\
              \ based on the Workcenter"
    GecColor:
      description: RGB-Color
      required:
      - red
      - green
      - blue
      - alpha
      type: object
      properties:
        alpha:
          format: int32
          description: Alpha
          maximum: 255
          minimum: 0
          type: integer
        blue:
          format: int32
          description: Blue
          maximum: 255
          minimum: 0
          type: integer
        green:
          format: int32
          description: Green
          maximum: 255
          minimum: 0
          type: integer
        red:
          format: int32
          description: Red
          maximum: 255
          minimum: 0
          type: integer
    WorkorderMaterialBinSetup:
      required:
      - materialBinId
      - organizationUnitId
      - workorderWorkstepId
      - validFrom
      - validTo
      - workorderId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        materialBinId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        validFrom:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        validTo:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    GecDuration:
      required:
      - duration
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "Duration, see https://en.wikipedia.org/wiki/ISO_8601#Durations"
            example: PT1M12S
        externalUnit:
          allOf:
          - $ref: '#/components/schemas/ChronoUnit'
          - description: External unit from other systems (e.g. ERP)
    Level4:
      enum:
      - UnproductiveShifts
      - Installation_Adaption
      - Offline_Training
      - FinishStart
      - RepairTime
      - WaitingPeriod
      - UnplannedChangeOfConsumables
      - OutOfSpecEntry
      - Unplanned
      - PreventiveMaintenanceTime
      - ProductionTestTime
      - SetupTime
      - MaintenanceDelay
      - PlannedChangeOfConsumables
      - Planned
      - StandbyTime
      - NotAnOperator
      - NotAProduct
      - NotASupportTool
      - EngineeringTime
      - ProcessTrials
      - EquipmentTrials
      - SoftwareQualification
      - ProductionTime
      - RegularProduction
      - WorkForThirdParty
      - PlanRuns
      type: string
    UserSkill:
      description: Skill of a user
      required:
      - userId
      - skillId
      - fromDate
      - toDate
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        skillId:
          $ref: '#/components/schemas/UUID'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
        userId:
          $ref: '#/components/schemas/UUID'
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderMaterialBinSetupView:
      description: WorkorderMaterialBinSetupView contains activated MaterialBin setups
        for a Workorder
      type: object
      properties:
        materialBin:
          allOf:
          - $ref: '#/components/schemas/MaterialBin'
          - description: The MaterialBin that was setup and activated
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: The MaterialCharge of MaterialBin that was setup and activated
              for
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The MaterialPart of MaterialBin that was setup and activated
              for
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit the MaterialBin was setup at
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of the Workorder the MaterialBin was setup and activated
              for
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the MaterialBin was setup and activated for
        workorderMaterialBinSetup:
          allOf:
          - $ref: '#/components/schemas/WorkorderMaterialBinSetup'
          - description: The WorkorderMaterialBinSetup Entity
    IdGeneratorComponent:
      required:
      - fillMode
      - fillWith
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ImportProcessState:
      description: State of the Import Processing
      enum:
      - FAILED_DUE_INVALID_DATA
      - FAILED_DUE_EXCEPTION
      - CREATED
      - UPDATED
      - DELETED
      - SKIPPED
      - ALREADY_AVAILABLE
      - IN_PROCESS
      type: string
    MaterialBinMeasurementDTO:
      description: Measurements for a MaterialBin
      required:
      - state
      - value
      - name
      - measurementUnit
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic(Testplan)
        lowerActionLimit:
          description: Lower Action Limit Value
          type: string
        lowerScrapLimit:
          description: Lower Scrap Limit Value
          type: string
        materialBinSectionReference:
          format: double
          description: Measuremnt referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximum Value
          type: string
        measurementUnit:
          description: Unit of the Measurement
          type: string
        minimum:
          description: Minimum Value
          type: string
        name:
          description: Name of the Measurement
          type: string
        nominal:
          description: Nominal Value
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The Id of the OrganizationUnit(Type:STATION) the measurement
              should be done for
        organizationUnitName:
          description: The Name of the OrganizationUnit(Type:STATION) the measurement
            should be done for
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
            default: LOCAL
        state:
          description: State of Booking
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard (only supported for numeric Measurements)
        testboardName:
          description: Name of an external Testplan (only supported for numeric Measurements)
          type: string
        tolerance:
          description: Tolerance Value
          type: string
        toleranceMaximum:
          description: Tolerance Maximum Value
          type: string
        toleranceMinimum:
          description: Tolerance Minimum Value
          type: string
        type:
          description: Type of the Measurement
          type: string
        upperActionLimit:
          description: Upper Action Limit Value
          type: string
        upperScrapLimit:
          description: Upper Scrap Limit Value
          type: string
        value:
          description: Value of Measurement
          type: string
    SerialunitEquipmentBooking:
      description: Bookings for Equipments setup at an organizationUnit during a WorkorderWorkstep
        Serialunit Booking.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - equipmentId
      - equipmentPartId
      - usages
      - failures
      - serialunitId
      - workorderId
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equioment used for this booking
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the equipment (EquipmentDefinition) used
              for this booking
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        failuresTotal:
          format: int32
          description: Number of total failures of the equipment after the booking
          minimum: 0
          type: integer
        id:
          $ref: '#/components/schemas/SerialunitEquipmentBookingPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit build with this equipment booking
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
        usagesTotal:
          format: int32
          description: Number of total usages of the equipment after the booking
          minimum: 0
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
    Volume:
      description: Dimension Volume
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    Part:
      description: "Part definition. Part may be a product, a raw material, an equipment\
        \ or any other part (Only certain fields are updatable when released, see\
        \ field's description)"
      required:
      - unitId
      - availabilityState
      - procurementType
      - materialType
      type: object
      properties:
        availabilityState:
          $ref: '#/components/schemas/AvailabilityState'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        expirationTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: expiration time of the part in seconds
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        materialType:
          allOf:
          - $ref: '#/components/schemas/MaterialType'
          - description: "Material Type of the part: MATERIAL, PRODUCT"
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: reference to partgroup of the part
        partTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: reference to parttype of the part
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        procurementType:
          allOf:
          - $ref: '#/components/schemas/ProcurementType'
          - description: "PROCUREMENT TYPE of the part: INHOUSE, EXTERNAL"
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the (base)unit of the part
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        workorderFinishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        workorderQuantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        workorderQuantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished
          type: integer
    IdGeneratorAssignmentView:
      description: Assignments of MasterData to an IdGenerator
      type: object
      properties:
        idGenerator:
          allOf:
          - $ref: '#/components/schemas/IdGenerator'
          - description: ID of the Id-Generator
        idGeneratorAssignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator-Assignment
        idGeneratorType:
          allOf:
          - $ref: '#/components/schemas/IdGeneratorType'
          - description: Type of IdGenerator
            readOnly: true
        masterDataDescription:
          description: Description of the MasterData
          type: string
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MasterData
        masterDataName:
          description: Name of the MasterData
          type: string
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of the MasterData. May be null if the IdGenerator is
              assigned to a type of masterData unknown in IdGenerator-Service.
            readOnly: true
    WorkorderWorkstepOrganizationUnitView:
      description: WorkorderWorkstepOrganizationUnit view. Stations that may process
        this workstep and summed up book quantites of the station
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this organizationUnit\
            \ in this workstep, incremented with each workorderWorkstepBooking"
          type: integer
        amountSerialunitBookings:
          format: int32
          description: "Count of Serialunit Bookings done for this organizationUnit\
            \ in this workstep, incremented with each serialunitUpload"
          type: integer
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Unique Identifier of the entity
            readOnly: true
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of the lastBooking (quantity or serialunit) to this
              worksterp
        lockGroups:
          description: LockGroups in the LockSystem assigned to this Workorder-Workstep-OrganizationUnit
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
        masterWorkcenterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Master Workcenter
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit only used if Type is MACHINE
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings in that workstep
          type: number
        quantityFirstPass:
          format: double
          description: Quantity of FIRST_PASS Bookings in that workstep
          type: number
        quantityInProcess:
          format: double
          description: Quantity of INPROCESS Bookings in that workstep
          type: number
        quantityPass:
          format: double
          description: Quantity of PASS Bookings in that workstep
          type: number
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings in that workstep
          type: number
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - example: 1970-01-01T00:00:00.0Z
        state:
          $ref: '#/components/schemas/WorkstepState'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
      readOnly: true
    Level2:
      enum:
      - NonScheduledUse
      - Downtime
      - Uptime
      type: string
    Level3:
      enum:
      - NonScheduledUse
      - UnscheduledDowntime
      - ScheduledDowntime
      - StandbyTime
      - EngineeringTime
      - ProductionTime
      type: string
    ConditionGroupView:
      description: ConditionGroupView contains ConditionGroup and the assigned Conditions
      type: object
      properties:
        conditionGroup:
          $ref: '#/components/schemas/ConditionGroup'
        conditionList:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
      readOnly: true
    ImportBulkRTOMaterialBinDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    MultipanelView:
      description: View of a multipanel with all serialunits it contains
      type: object
      properties:
        multipanel:
          allOf:
          - $ref: '#/components/schemas/Multipanel'
          - description: Multipanel
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Workoder
        serialunits:
          description: Serialunits of the multipanel
          type: array
          items:
            $ref: '#/components/schemas/Serialunit'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder of the Serialunit
      readOnly: true
    HealthCheckStatus:
      enum:
      - DOWN
      - UP
      type: string
    MaterialBookingViewGrouped:
      description: MaterialBookingViewGrouped is MaterialBookingView grouped by Part
        and Location
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'First Book Date '
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First SerialunitId '
        firstSerialunitName:
          description: 'First SerialunitName '
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Last Book Date '
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last SerialunitId '
        lastSerialunitName:
          description: 'Last SerialunitName '
          type: string
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSection:
          allOf:
          - $ref: '#/components/schemas/MaterialBinSection'
          - description: "Optional MaterialBinSection, only set if a setion is given\
              \ during the upload"
        materialBinSectionReference:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the MaterialBooking
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        maxMaterialBinSectionReference:
          format: double
          description: Max. Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReference:
          format: double
          description: Min. Position/Reference in Section of the materialBin
          type: number
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        qtyBookings:
          format: int32
          description: 'Anount of Bookings for Group Key '
          type: integer
        quantity:
          format: double
          description: Quantity
          type: number
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Serialunit Id
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Serialunit Position
          type: string
        setupPosition:
          description: Setup Position
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    ImportRTOMultipanelDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    UserSkillBase:
      description: Skills of a user
      required:
      - userId
      - skillId
      - fromDate
      - toDate
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        skillId:
          $ref: '#/components/schemas/UUID'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
        userId:
          $ref: '#/components/schemas/UUID'
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SerialunitSetupDTO:
      description: "Setup data for a given SetupPosition with the materialBin setup\
        \ on this setupPosition, contains also the involved (BOM)-Location(s) and\
        \ the quantity consumed of the materialbin.<BR>When MaterialBin-FailurePareto\
        \ based on the (BOM)-Location should be used, each (BOM)-Location has to be\
        \ passed separately.<BR>SerialunitSetupDTO contains an SmtSetupEquipmentDTO-Array\
        \ where the used SmtEquipments (e.g. for Nozzle, Feeder, Head,...) can be\
        \ given for individual (BOM)-Locations"
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer for whom the materialbin is needed
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialBinSectionReference:
          format: double
          description: "Position in the materialBin used for this booking (valid for\
            \ sequential MaterialBins, see MaterialBinTyp and MaterialBinItem from/to)"
          type: number
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        smtSetupEquipments:
          description: "List of used smtEquipments for the materialBin and Location(s)\
            \ (Feeder, Nozzle, Head, ... for a location)"
          type: array
          items:
            $ref: '#/components/schemas/SmtSetupEquipmentDTO'
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    ParallelSerialunitBookingSerialunitView:
      description: ParallelSerialunitBookingSerialunitView is a Join over SerialunitBooking
        and Serialunit
      type: object
      properties:
        bookdate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Bookdate of the booking
        bookings:
          description: Bookings that are performed in parallel at the bookdate
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBookingSerialunitView'
    MessageClass:
      description: Defintion of a Message Class. Updates to a MessageClass will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    PartSmall:
      description: "PartSmall describes the Part and contains only id,name and description"
      type: object
      properties:
        description:
          description: Part Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Part ID
        name:
          description: Part Name
          type: string
      readOnly: true
    SmtEquipmentView:
      description: SmtEquipmentView with Part-Details
      required:
      - smtEquipment
      type: object
      properties:
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the SmtEquipment
        smtEquipment:
          $ref: '#/components/schemas/SmtEquipment'
      deprecated: true
    MergeState:
      description: "State-change of the Merge: MERGED,UNMERGED"
      enum:
      - MERGED
      - UNMERGED
      type: string
    SerialunitDTO:
      description: "Serialunit Structure identifing a single serialsunit in SMOM.\
        \ When used to create the serialunit at least the name and the Workorder has\
        \ to set, to create the serialunit"
      required:
      - name
      type: object
      properties:
        description:
          description: Description of the Serialunit. a optional description for thre
            serialunit
          type: string
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Serialunit (UUID), is set from the server based\
              \ on the Serialunit"
            readOnly: true
        name:
          description: Name of the Serialunit
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        payload:
          description: Payload of the Serialunit. a optional description for thre
            serialunit
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/SerialunitState'
          - description: "State of the Serialunit. Allowed SerialunitState for Creation:\
              \ NEW, INPROCESS. NEW is the default"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the serialunit belongs to. Only required
              if a Serialunit has to be created
        workorderName:
          description: The Name of the Workorder the serialunit belongs to. Only required
            if a Serialunit has to be created
          type: string
    WorkorderEquipmentSetupView:
      description: WorkorderEquipmentSetupView contains activated Equipment setups
        for a Workorder
      type: object
      properties:
        equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: The Equipment that was setup and activated
        equipmentPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of Equipment that was setup and activated for
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit the Equipment was setup at
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of the Workorder the Equipment was setup and activated
              for
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the Equipment was setup and activated for
        workorderEquipmentSetup:
          allOf:
          - $ref: '#/components/schemas/WorkorderEquipmentSetup'
          - description: The WorkorderEquipmentSetup Entity
    MdcDim:
      description: 'MdcDim contains Join over Conditions & ConditionGroups '
      type: object
      properties:
        conditionColorRgba:
          type: string
          readOnly: true
        conditionCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        conditionDescritpion:
          type: string
          readOnly: true
        conditionGroupCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        conditionGroupHasAttribute:
          type: boolean
          readOnly: true
        conditionGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionGroupName:
          type: string
          readOnly: true
        conditionGroupPlantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionGroupStamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        conditionGroupVersion:
          format: int64
          type: integer
          readOnly: true
        conditionHasAttribute:
          type: boolean
          readOnly: true
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionInfo1:
          type: string
          readOnly: true
        conditionInfo2:
          type: string
          readOnly: true
        conditionInfo3:
          type: string
          readOnly: true
        conditionLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - readOnly: true
        conditionLevel2Color_rgba:
          type: string
          readOnly: true
        conditionLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - readOnly: true
        conditionLevel3Color_rgba:
          type: string
          readOnly: true
        conditionLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - readOnly: true
        conditionLevel4Color_rgba:
          type: string
          readOnly: true
        conditionName:
          type: string
          readOnly: true
        conditionPlantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionStamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        conditionVersion:
          format: int64
          type: integer
          readOnly: true
    SerialunitReservedNumber:
      description: Reserved numbers for a serialunit e.g. to be used in multipanels.
        Updates to a SerialunitReservedNumber will be stored in an audit-trail.
      required:
      - position
      - name
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        name:
          description: Name has to be unique for all reserved numbers for a serialunit
          type: string
        position:
          description: Position has to be unique for all reserved numbers for a serialunit
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the serialunit this number is reserved for
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        used:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Used for API /api/views/serialunits/reservednumbers/unused
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    EquipmentSetupView:
      description: EquipmentSetupView Definition Equipment and Setup Infos
      type: object
      properties:
        activeSetupSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Setup is activated for a workorder since. May be null if
              not activated
        equipment:
          $ref: '#/components/schemas/Equipment'
        firstSetup:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the first Equipment was setup on this position
              at this OrganizationUnit
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Equipment
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the Equipment
        requiredByWorkplan:
          description: Is this Equipment required by Workplan. May be null if not
            activated
          type: boolean
        setupPosition:
          description: SetupPosition
          type: string
        setupSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Current Equipment is setup since
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the Equipment
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Workstep for which the Setup is active. May be null if no
              Setup is active
      readOnly: true
    SerialunitBookingDTO:
      description: Serialunit Booking Structure for all Serialunit/Failure/Measurement/Material/Equipment-
        Bookings
      required:
      - organizationUnitName
      - workstepName
      - serialunitName
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        failureList:
          description: List of Failures for that booking
          type: array
          items:
            $ref: '#/components/schemas/FailureDTO'
        measurementDTOList:
          description: Measurement Data for that booking
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDTO'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit(optional). Can be set if available otherwise
              use SerialunitName instead
        serialunitName:
          description: Name of the Serialunit that performs bookings
          type: string
        setupList:
          description: List of SetupData with materialBins and the used smtEquipments
            for this booking
          type: array
          items:
            $ref: '#/components/schemas/SerialunitSetupDTO'
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Testboard(optional).
        testboardName:
          description: Name of the Testboard(optional).
          type: string
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    Prefix:
      type: object
      properties:
        exponent:
          format: int32
          type: integer
        name:
          type: string
        symbol:
          type: string
        value:
          type: number
    MessageGroupItem:
      description: Connect between a MessageGroup and a Message
      required:
      - messageGroupId
      - messageId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        messageGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Group
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipmentBookingViewGrouped:
      description: "SmtEquipmentBookingView is a Join over SmtEquipmentBooking, SmtEquipment,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First Book Date
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: First SerialunitId
        firstSerialunitName:
          description: First SerialunitName
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last Book Date
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Last SerialunitId
        lastSerialunitName:
          description: Last SerialunitName
          type: string
        location:
          description: (BOM)-Location that was processed/placed with this smtEquipment
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        misspicks:
          format: int64
          description: MissPicks
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the smtEquipment
              to process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        picks:
          format: int64
          description: Picks
          type: integer
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        qtyBookings:
          format: int32
          description: Anount of Bookings for Group Key
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        smtEquipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the SmtEquipmentBooking
        smtEquipmentDescription:
          description: Description of the SmtEquipment
          type: string
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
        smtEquipmentSetupPosition:
          description: the setupPosition the SmtEquipment was placed on
          type: string
        smtEquipmentType:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: Type of the SmtEquipment
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepLocation:
          type: string
        workstepNumber:
          description: WorkstepNumber the smtEquipment was used
          type: string
      readOnly: true
      deprecated: true
    MaterialCharge:
      description: Producers of MaterialBins. Updates to a MaterialCharge will be
        stored in an audit-trail.
      required:
      - lockedState
      - producerContactId
      - partId
      - datecode
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the CustomerContact
        datecode:
          type: string
        description:
          type: string
        externalId:
          description: Identifier used by external system
          type: string
        externalNotified:
          description: External system has sent a notification for this object
          type: boolean
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originates from system
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Corresponding part must not be in state IN_PROCESS
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the contact of the producer of this material-charge,\
              \ stored in address-service"
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SupplierContact
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepBomItemView:
      description: 'WorkorderWorkstepBomItemView Object '
      type: object
      properties:
        alternatives:
          description: List of Workorder Workstep Bom Item Alternative Views
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternativeView'
          readOnly: true
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part Object used in WorkorderWorkstepBomItem (Material)
            readOnly: true
        unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          - description: Unit Object used in WorkorderWorkstepBomItem
            readOnly: true
        workorderWorkstepBomItem:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBomItem'
          - description: Workorder Workstep Bom Item
            readOnly: true
    MultipanelSerialunitDTO:
      description: "MultipanelSerialunit Structure identifing the serialsunit/pcb\
        \ in SMOM. When used to create the serialunit in an Multipanel, at least the\
        \ name and the Workorder has to set, to create the serialunit"
      required:
      - name
      type: object
      properties:
        description:
          description: Description of the Serialunit. a optional description for thre
            serialunit
          type: string
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Serialunit (UUID), is set from the server based\
              \ on the Serialunit"
            readOnly: true
        multipanelPosition:
          description: "position of the Serialunit, when not given the default '1'\
            \ is used"
          type: string
        name:
          description: Name of the Serialunit
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        payload:
          description: Payload of the Serialunit. a optional description for thre
            serialunit
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/SerialunitState'
          - description: "State of the Serialunit. Allowed SerialunitState for Creation:\
              \ NEW, INPROCESS. NEW is the default"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the serialunit belongs to. Only required
              if a Serialunit has to be created
        workorderName:
          description: The Name of the Workorder the serialunit belongs to. Only required
            if a Serialunit has to be created
          type: string
    OrganizationUnitMessageHistoryView:
      description: "OrganizationUnitMessageHistoryView contains Message, OrganizationUnitMessageHistory"
      type: object
      properties:
        messageView:
          $ref: '#/components/schemas/MessageView'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMessageHistory:
          $ref: '#/components/schemas/OrganizationUnitMessageHistory'
      readOnly: true
    EquipmentDefinition:
      description: An EquipmentDefinition defines details of a Part of MaterialType
        EQUIPMENT. By this defintion instances of equipments can be created in SMOM.
      required:
      - partId
      - equipmentTypeId
      - usageFactor
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        equipmentTypeId:
          $ref: '#/components/schemas/UUID'
        finalExpiration:
          $ref: '#/components/schemas/FinalMaintenanceInterval'
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        maintenanceIntervalGroups:
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceIntervalGroup'
        partId:
          $ref: '#/components/schemas/UUID'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    OrganizationUnitMessageAssignment:
      description: Connect between a OrganizationUnit and a Message
      required:
      - organizationUnitId
      - messageId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    Piece:
      description: Dimension Piece
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    WorkorderType:
      description: Fixed defined WorkorderTypes
      enum:
      - PRODUCTION
      - REPAIR
      - EXTERNAL_PRODUCT
      type: string
    EquipmentBookingBaseView:
      description: "EquipmentBookingView is a Join over SerialunitEquipmentBooking,\
        \ Equipment, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date of this equipmentBooking
        equipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the equipmentBooking
        equipmentDescription:
          description: Description of the Equipment
          type: string
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equipment
        equipmentName:
          description: Name of the Equipment
          type: string
        equipmentPartDescription:
          description: Description of the EquipmentPart
          type: string
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the EquipmentPart
        equipmentPartName:
          description: Name of the EquipmentPart
          type: string
        equipmentSetupPosition:
          description: the setupPosition the equipment was placed on
          type: string
        equipmentTypeDescription:
          description: Description of the EquipmentType
          type: string
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of the Equipment
        equipmentTypeName:
          description: Name of the EquipmentType
          type: string
        failures:
          format: int32
          description: Failures booked with this booking
          type: integer
        failuresTotal:
          format: int32
          description: Total Failures of the equipment after this booking
          type: integer
        usages:
          format: int32
          description: Usages booked with this booking
          type: integer
        usagesTotal:
          format: int32
          description: Total Usages of the equipment after this booking
          type: integer
      readOnly: true
    MaterialBinMeasurementBookingNumericView:
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        calculatedState:
          description: Calculated
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic (Testplan) for this Booking
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the Measurement
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          description: Name
          type: string
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
        state:
          description: State
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of an external Testboard the measurement references
              to
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        value:
          format: double
          description: Value
          type: number
    MeasurementDTO:
      description: Measurement Structure
      required:
      - state
      - value
      - name
      - measurementUnit
      type: object
      properties:
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic(Testplan)
        lowerActionLimit:
          description: Lower Action Limit Value
          type: string
        lowerScrapLimit:
          description: Lower Scrap Limit Value
          type: string
        maximum:
          description: Maximum Value
          type: string
        measurementUnit:
          description: Unit of the Measurement
          type: string
        minimum:
          description: Minimum Value
          type: string
        name:
          description: Name of the Measurement
          type: string
        nominal:
          description: Nominal Value
          type: string
        state:
          description: State of Booking
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard (only supported for numeric Measurements)
        testboardName:
          description: Name of an external Testplan (only supported for numeric Measurements)
          type: string
        tolerance:
          description: Tolerance Value
          type: string
        toleranceMaximum:
          description: Tolerance Maximum Value
          type: string
        toleranceMinimum:
          description: Tolerance Minimum Value
          type: string
        type:
          description: Type of the Measurement
          type: string
        upperActionLimit:
          description: Upper Action Limit Value
          type: string
        upperScrapLimit:
          description: Upper Scrap Limit Value
          type: string
        value:
          description: Value of Measurement
          type: string
    AvailabilityState:
      description: "Availability State of the part: AVAILABLE, DISCHARGED, BLOCKED,\
        \ DELETED"
      enum:
      - AVAILABLE
      - BLOCKED
      - DISCHARGED
      - DELETED
      type: string
    OrganizationUnitSetupMaterialBinView:
      description: What is setup at a OrganizationUnit (Station)
      type: object
      properties:
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit
        setupPositions:
          description: List MaterialBinSetupView
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSetupView'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder for which the Setup is active. May be null if no
              Setup is active
    OrganizationUnitMeasurementType:
      description: Fixed defined OrganizationTypes
      enum:
      - PROCESS
      - SERIAL
      type: string
    OrganizationUnitView:
      description: OrganizationUnitView Object
      required:
      - organizationUnit
      type: object
      properties:
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        processLocationList:
          type: array
          items:
            type: string
    HealthCheckResponse:
      type: object
      properties:
        data:
          type: object
          nullable: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthCheckStatus'
    ParetoStackedValue:
      description: A ParetoStackedValue is the object that contains for a Name several
        ParetoValues
      type: object
      properties:
        name:
          description: The Name of the ParetoValue (for example FailureName)
          type: string
        paretoValueList:
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
      readOnly: true
    PartGroup:
      description: PartGroup definition.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    BookedUnitInfo:
      description: Info about Bookings
      required:
      - workorderId
      - workorderName
      - organizationUnitId
      - organizationUnitName
      - workorderWorkstepId
      - workorderWorkstepName
      type: object
      properties:
        fail:
          format: double
          description: Amount of PCBs with State FAIL or booked WorkstepQuantity with
            quantityFail
          type: number
          readOnly: true
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First BookDate
            readOnly: true
        firstPass:
          format: double
          description: Amount of PCBs with State PASS and FirstBooking or booked WorkstepQuantity
            with quantityFirstPass
          type: number
          readOnly: true
        fpy:
          format: double
          description: First Pass Yield
          type: number
          readOnly: true
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate
            readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        pass:
          format: double
          description: Amount of PCBs with State PASS or booked WorkstepQuantity with
            quantityPass
          type: number
          readOnly: true
        processingTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Estimated time from Workplan needed to process this workstep
              by a machine
            readOnly: true
        scrap:
          format: double
          description: Amount of PCBs with State SCRAP or booked WorkstepQuantity
            with quantityScrap
          type: number
          readOnly: true
        setupTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Estimated time from Workplan needed to setup this workstep
              by a machine
            readOnly: true
        sumProcessingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Sum of the booked Cycletimes (FROM MACHINE)
            readOnly: true
        sumSetupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Sum of the booked SetupTimes (FROM MACHINE)
            readOnly: true
        total:
          format: double
          description: Total Amount of PCBs or sum of booked WorkstepQuantity of quantityPass/Fail/Scrap
          type: number
          readOnly: true
        transportTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Time needed from Workplan for Transport
            readOnly: true
        waitTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Time needed from Workplan for Wait
            readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
        workorderName:
          description: Name of the Workorder
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep
          type: string
    SerialunitBookingState:
      description: Fixed defined booking-states of a Serialunit
      enum:
      - PASS
      - FAIL
      - SCRAP
      - INPROCESS
      type: string
    AnalysisResult:
      type: object
      properties:
        analysisResultType:
          description: Result Type
          type: string
        equipmentId:
          format: int64
          description: Id of the Equipment
          type: integer
        equipmentName:
          description: Name of the Equipment
          type: string
        failurePercent:
          format: double
          description: Failure Percent
          type: number
        fromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: From Date
        location:
          description: Location
          type: string
        materialBinId:
          format: int64
          description: Id of the MaterialBin
          type: integer
        materialBinName:
          description: Name of the MaterialBin
          type: string
        partId:
          format: int64
          description: Id of the Part(Product)
          type: integer
        partName:
          description: Name of the Part(Product)
          type: string
        qtyFailure:
          format: int64
          description: Quantity Failure
          type: integer
        qtyUsed:
          format: int64
          description: Quantity Used
          type: integer
        toDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: To Date
      readOnly: true
    WorkorderWorkstepOrganizationUnitLockGroupView:
      description: WorkorderWorkstepOrganizationUnitLockGroupView view. Active Locks
        of WorkorderWorkstepOrganizationUnits and the assigned LockGroup
      type: object
      properties:
        lockDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: the LockDate when the Lock was established
        lockDescription:
          description: a Description for the Lock
          type: string
        lockGroup:
          allOf:
          - $ref: '#/components/schemas/LockGroup'
          - description: The LockGroup that is assigned to the WorkorderWorkstepOrganizationUnit
        lockType:
          allOf:
          - $ref: '#/components/schemas/LockType'
          - description: The Type of the LockGroup that is assigned to the WorkorderWorkstepOrganizationUnit
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        workorderDescription:
          description: Description of the Workorder
          type: string
        workorderName:
          description: Name of the Workorder
          type: string
        workorderWorkstepOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
          - description: the WorkorderWorkstepOrganizationUnit that holds the Lock
        workorderWorkstepOrganizationUnitLockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnitLockGroup
      readOnly: true
    MessageView:
      description: "MessageView contains Message, MessageClass and MessageCategory"
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        messageCategory:
          $ref: '#/components/schemas/MessageCategory'
        messageClass:
          $ref: '#/components/schemas/MessageClass'
      readOnly: true
    WorkorderWorkstepOrganizationUnit:
      description: WorkorderWorkstepOrganizationUnit Entity. Stations that may process
        this workstep and summed up book quantites of the station
      required:
      - organizationUnitId
      - workorderWorkstepId
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this organizationUnit\
            \ in this workstep, incremented with each workorderWorkstepBooking"
          type: integer
          readOnly: true
        amountSerialunitBookings:
          format: int32
          description: "Count of Serialunit Bookings done for this organizationUnit\
            \ in this workstep, incremented with each serialunitUpload"
          type: integer
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
            example: 1970-01-01T00:00:00.0Z
        hasLockGroups:
          description: "True when the Entity has LockGroups in the LockSystem. Items\
            \ produced at this organizationUnit and workstep will be locked, if lockGroups\
            \ are assigned. Use API organizationunits/{id}/lockgroups... to set/remove\
            \ lockGroups."
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of the lastBooking (quantity or serialunit) to this
              worksterp
            readOnly: true
        masterWorkcenterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the MasterData-Workcenter, might be NULL if the organizationUnit\
              \ was added during upload, without Workcenter-relation."
            readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit only used if Type is MACHINE
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings a station in the workstep
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Quantity of First PASS Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Quantity of InProcess Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Quantity of PASS Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings at a station in the workstep
          type: number
          readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: For updates of workstepState use activate/deactivate APIs
              PUT /resources/organizationunits...
            default: READY
            readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
    OrganizationUnitMeasurementValue:
      description: Mesurementvalue booked by an OrganizationUnit
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: BookDate of the Measurement
        endDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: EndDate of the Filter for OrganizationUnitMeasurementValue
        maximum:
          format: double
          description: Max Value of the Measurement
          type: number
        maximumTextual:
          description: Max Value of the Measurement
          type: string
        measurementName:
          description: Name of the Measurement
          type: string
        minimum:
          format: double
          description: Min Value of the Measurement
          type: number
        minimumTextual:
          description: Min Value of the Measurement
          type: string
        nominal:
          format: double
          description: Nominal Value of the Measurement
          type: number
        nominalTextual:
          description: Nominal Value of the Measurement
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        serialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SerialUnit for which the Booking was performed.
              (Only filled for serials)
        serialUnitName:
          description: Name of the SerialUnit for which the Booking was performed.
            (Only filled for serials)
          type: string
        startDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: StartDate of the Filter for OrganizationUnitMeasurementValue
        tolerance:
          format: double
          description: Tolerance Value of the Measurement
          type: number
        toleranceTextual:
          description: Tolerance Value of the Measurement
          type: string
        unit:
          description: Unit
          type: string
        value:
          format: double
          description: Value of the Measurement
          type: number
        valueTextual:
          description: Value of the Measurement
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder
      readOnly: true
    SerialunitState:
      description: Fixed defined states for Serialunit
      enum:
      - NEW
      - FINISHED
      - FINISHED_SCRAP
      - MERGED
      - INPROCESS
      type: string
    EquipmentView:
      description: EquipmentView with Part-Details
      required:
      - equipment
      type: object
      properties:
        equipment:
          $ref: '#/components/schemas/Equipment'
        equipmentType:
          allOf:
          - $ref: '#/components/schemas/EquipmentType'
          - description: Type of the Equipment
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Equipment
    Length:
      description: Dimension Length
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    Downtime:
      description: Downtime. Aggregate by duration and amount
      type: object
      properties:
        amountBooking:
          format: int32
          description: Amount of Bookings performed
          type: integer
        amountDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Amount of total Duration performed
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: Condition Object
      readOnly: true
    Frequency:
      description: Dimension Frequency
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    MaterialBinSetupView:
      description: "MaterialBinSetupView Definition MaterialBin with Part-, MaterialCharge\
        \ and Setup Infos"
      type: object
      properties:
        activeSetupSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Setup is activated for a workorder since. May be null if
              not activated
        firstSetup:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the first materialBin was setup on this position
              at this OrganizationUnit
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the MaterialBin
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the MaterialBin
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the MaterialBin
        requiredByBom:
          description: Is this Part required by BOM. May be null if not activated
          type: boolean
        setupPosition:
          description: SetupPosition
          type: string
        setupSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Current MaterialBin is setup since
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the MaterialBin
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Workstep for which the Setup is active. May be null if no
              Setup is active
      readOnly: true
    ModelType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    WorkorderWorkstepEquipmentBookingPk:
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        equipmentId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    Power:
      description: Dimension Power
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    MaterialBinTransactionData:
      description: Frequently changing data for a materialBin
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
            example: 1970-01-01T00:00:00.0Z
        currentQuantity:
          format: double
          description: Total MaterialBin Quantity
          type: number
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate the MaterialBin was used for s Serialunit or
              WorkorderWorkstep -Booking
        lastMeasurementBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate a MeasurementBooking was done for the MaterialBin
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Min Booking Date of bookings for the MaterialBin. Null if
              no booking was done so far.
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
    WarnType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    AssignmentView:
      description: AssignmentView contains Assignment and Conditions
      type: object
      properties:
        assignment:
          $ref: '#/components/schemas/Assignment'
        conditionList:
          description: Use 'conditions' instead
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          deprecated: true
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
      readOnly: true
    SystemInfo:
      description: SystemInfo
      type: object
      properties:
        FlywayDbInfoList:
          description: List of FlywayDbInfos
          type: array
          items:
            $ref: '#/components/schemas/FlywayDbInfo'
        JdbcDriverInfoList:
          description: List of JdbcDriverInfos
          type: array
          items:
            $ref: '#/components/schemas/JdbcDriverInfo'
        availableProcessors:
          format: int32
          description: Available Processors
          type: integer
        freeMemory:
          format: int64
          description: "Free Memory [bytes]"
          type: integer
        javaVersion:
          description: Version of the Java
          type: string
        maxMemory:
          format: int64
          description: "Max Memory [bytes]"
          type: integer
        platformVersion:
          description: Version of the Platform (Payara or Quarkus)
          type: string
        postgresqlVersion:
          description: List of JdbcDriverInfos
          type: string
        totalMemory:
          format: int64
          description: "Total Memory [bytes]"
          type: integer
      readOnly: true
    ElectricCurrent:
      description: Dimension ElectricCurrent
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    SerialunitBooking:
      description: Bookings of a Serialunit
      required:
      - bookDate
      - serialunitId
      - organizationUnitId
      - bookState
      - workorderId
      - hasFailures
      - hasMeasurementsNumeric
      - hasMeasurementsTextual
      - hasMaterial
      - hasSmtEquipment
      - hasEquipment
      - partId
      - workorderWorkstepId
      - processLocation
      - cycleTime
      - setupTime
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Booking OffsetDateTime
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        cycleTime:
          format: int64
          description: Cycletime for this Booking
          type: integer
        firstBooking:
          description: "Is First Booking of the serialunit in this workstep (is determinded\
            \ by the server from the for PASS, FAIL, SCRAP, but not for INPROCESS)."
          type: boolean
          readOnly: true
        firstPass:
          type: boolean
        hasEquipment:
          description: Are EquipmentBookings existing for this Booking
          type: boolean
        hasFailures:
          description: Are FailureBooking existing for this Booking
          type: boolean
        hasMaterial:
          description: Are MaterialBookings existing for this Booking
          type: boolean
        hasMeasurementsNumeric:
          description: Are MeasurementNumericBookings existing for this Booking
          type: boolean
        hasMeasurementsTextual:
          description: Are MeasurementTextualBookings existing for this Booking
          type: boolean
        hasSmtEquipment:
          description: Are SmtEquipmentBookings existing for this Booking
          type: boolean
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialUnitId for this Booking
            nullable: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PartID for this Booking
        processLocation:
          description: ProcessLocation of the Workstep for this Booking
          type: string
        quantityFail:
          format: double
          description: Delta FAIL-Quantity (0 or 1) for WorkstepBooking based on this
            booking
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Delta FIRST-PASS-Quantity (0 or 1) for WorkstepBooking set
            when PASS and firstBooking = true
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Delta InProcess-Quantity (0 or 1) for WorkstepBooking. Use
            this state only for long running process steps
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Delta PASS-Quantity (0 or 1) for WorkstepBooking based on this
            booking
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Delta SCRAP-Quantity (0 or 1) for WorkstepBooking based on
            this booking
          type: number
          readOnly: true
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialUnitId for this Booking
        setupTime:
          format: int64
          description: Setuptime for this Booking
          type: integer
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ShiftId for this Booking, can be null"
            nullable: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Testboard for this Booking
        testboardName:
          description: Name of the Testboard for this Booking
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderClusterPosition:
          description: Position of the Workorder in a WorkorderCluster
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
    SerialunitMeasurementBookingNumericView:
      description: "MeasurementBookingNumericView is a Join over MeasurementBookingNumeric,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        calculatedState:
          description: Calculated
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Characteristic
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the Measurement
        lowerActionLimit:
          format: double
          description: LowerActionLimit
          type: number
        lowerScrapLimit:
          format: double
          description: LowerScrapLimit
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          description: Name
          type: string
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        state:
          description: State
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Testboard
        testboardName:
          description: Name of a Testboard
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        toleranceMaximum:
          format: double
          description: ToleranceMaximum
          type: number
        toleranceMinimum:
          format: double
          description: ToleranceMinimum
          type: number
        upperActionLimit:
          format: double
          description: UpperActionLimit
          type: number
        upperScrapLimit:
          format: double
          description: UpperScrapLimit
          type: number
        value:
          format: double
          description: Value
          type: number
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    DateNumberPair:
      description: DateNumberPair
      type: object
      properties:
        time:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Time
        value:
          format: double
          description: Number Value
          type: number
      readOnly: true
    WorkorderDTO:
      description: Workorder data including Workplan/Worksteps Bom/BomItems
      required:
      - quantity
      - numberOfBoards
      - name
      - type
      - erpState
      - partName
      - workplan
      - bom
      type: object
      properties:
        bom:
          $ref: '#/components/schemas/BomDTO'
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: |-
              Id of the CustomerContact to be build the Parts for.
               CustomerContact is not allowed for External Products.
        description:
          description: Description
          type: string
        erpState:
          $ref: '#/components/schemas/WorkorderErpState'
        finishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        numberOfBoards:
          format: int32
          description: Number of Units that are produced in one cycle (e.g. PCB with
            4 Positions)
          minimum: 1
          type: integer
        orderSequenceNumber:
          format: int32
          description: Order sequence number of the workorder
          type: integer
        parentWorkorderName:
          description: Name of parent workorder
          type: string
        partName:
          description: Name of a Part
          type: string
        payload:
          description: Payload
          type: string
        plannedDeliveryDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: planned delivery-date of the Workorder
        plannedEndDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Planned end-date of the Workorder
        plannedStartDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Planned start-date of the Workorder
        priorityCode:
          description: Priority of the workorder
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: |-
              Id of the ProducerContact who build the External Products
              Either the SupplierContact or ProducerContact has to be given for External Products
              When both are given they have to be the same Contact
        productionController:
          description: Production Controller
          type: string
        purchaseOrderNumber:
          description: Purchase Order Number
          type: string
        quantity:
          format: double
          description: Workorder Quantity
          minimum: 1
          type: number
        quantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        quantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished
          minimum: 1
          type: integer
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the SupplierContact who delivered the External Products.\
              \ \nEither the SupplierContact or ProducerContact has to be given for\
              \ External Products\nWhen both are given they have to be the same Contact"
        type:
          $ref: '#/components/schemas/WorkorderType'
        unit:
          description: Unit of the workorder
          default: PIECE
          type: string
        workplan:
          $ref: '#/components/schemas/WorkplanDTO'
    EquipmentType:
      description: "Types of equipments (Only certain fields are updatable when released,\
        \ see field's description)"
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    LockType:
      description: "Lock Type Entity (Only certain fields are updatable when released,\
        \ see field's description). Updates to a LockType will be stored in an audit-trail."
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    MergeSerialunitHistory:
      description: History for serialunit merges and unmerges
      required:
      - stamp
      - serialunitId
      - parentSerialunitId
      - state
      - mergeDate
      - created
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        mergeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the Merge was done
        mergeLocation:
          description: BOM-Location of the PArent-BOM where the Merge is done for
          type: string
        mergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId where the merge was done
        parentSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ParentSerialunitId the serialunit is/was merged to
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialunitId that is/was merged into a ParentSerialunit
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          $ref: '#/components/schemas/MergeState'
        unmergeComment:
          description: Optional Comment regarding the unmerge
          type: string
        unmergeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Date when the Merge was removed/unmerged, is null when the\
              \ merge is still valid"
        unmergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId where a unmerge was done
      readOnly: true
    OrganizationUnitMessageHistory:
      description: History of messages of an OrganizationUnit
      required:
      - organizationUnitId
      - messageId
      - openSince
      - itemId
      - openUser
      - closedSince
      - closedUser
      - confirmToCloseDuration
      - openToCloseDuration
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        closedInfo:
          description: Additional close message
          type: string
        closedSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Message close-time
        closedUser:
          description: Name of the user that closed the message
          type: string
          readOnly: true
        confirmToCloseDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between confirm and close
            readOnly: true
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Message confirm-time
        confirmedUser:
          description: Name of the user that confirmed the message
          type: string
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
        openSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Message open-time. May be set on creation-time of the message,\
              \ subsequent updates are forbidden!"
        openToCloseDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and close
            readOnly: true
        openToConfirmDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and confirm
            readOnly: true
        openUser:
          description: Name of the user that opened the message
          type: string
          readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the plant
            readOnly: true
        responsibleUser:
          description: Name of the user that is responsible
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift during open-time
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FailureDTO:
      description: Failure Structure containing the failure information for a Serialunit
        booking
      required:
      - failureName
      - failureLocation
      - isRepaired
      type: object
      properties:
        failureActionName:
          description: Action for the failure
          type: string
        failureCauseName:
          description: Cause for the failure
          type: string
        failureComment:
          description: Optional Comment for the failure
          type: string
        failureLocation:
          description: Position of the Part (Einbauort)
          type: string
        failureMaterialBinName:
          description: Name of the MaterialBin with/that causes the failure
          type: string
        failureName:
          description: Unique Name/Code of the failure
          type: string
        failurePartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialPart with/that causes the failure
        failurePartName:
          description: Name of the MaterialPart with/that causes the failure
          type: string
        failurePatternName:
          description: Pattern for the failure
          type: string
        failureRiskName:
          description: Risk for the failure
          type: string
        failureSymptomName:
          description: Symptom for the failure
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id may not set in the input structure, the id is defined\
              \ by the server and returned to the client"
            readOnly: true
        isPseudo:
          description: Failure-definition-flag if this failure is a pseudo failure.<BR/>
            Is only used when the failure doesn't exist in SmartMom and has to be
            created.
          type: boolean
        isRepaired:
          description: Flag if the failure is repaired
          type: boolean
        repairOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the module which has repaired the failure
        repairOrganizationUnitName:
          description: Number of the module which has repaired the failure
          type: string
    MaterialType:
      description: "Material Type of a part: PRODUCT, MATERIAL, etc. A Product is\
        \ based on a BOM, Material is not based on a BOM."
      enum:
      - PRODUCT
      - MATERIAL
      - EQUIPMENT
      type: string
    MessageState:
      enum:
      - OPEN
      - CONFIRMED
      type: string
    ImportRTOUnidentifiableSerialunitBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OrganizationUnitWorkerDeregistration:
      description: "History of registered Workers at a OrganizationUnit in the past,\
        \ but deregistered now"
      required:
      - organizationUnitId
      - workerId
      - stamp
      - deregisterOrganizationUnitId
      - deregisterDate
      - created
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation date of the server.
            readOnly: true
        deregisterDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the worker was deregistered
        deregisterOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was used to deregister the
              Worker. Set from the server to Line or Station that was used to deregister
              the user.
            readOnly: true
        deregisterUsername:
          description: Username of the user who has deregistered the worker from that
            station
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the Worker is registered to
        registerDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Optional, Registration Date provided by the registration,\
              \ otherwise same as created"
        registerOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was ued to register the Worker.
              Set from the server to Line or Station that was used to register the
              user.
            readOnly: true
        registerUsername:
          description: Username who has registered the worker at the station.
          type: string
          readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last change date of the tuple
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Worker that is registered at the organizationUnit
    HistoryOrganizationUnitMaterialBinSetupView:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitMaterialBinSetupView'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    SerialunitView:
      description: View of a Serialunit
      type: object
      properties:
        lockGroups:
          description: LockGroups assigned to the Serialunit
          type: array
          items:
            $ref: '#/components/schemas/LockGroup'
          readOnly: false
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Serialunit
            readOnly: false
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: Serialunit
            readOnly: true
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder of the Serialunit
            readOnly: false
      readOnly: true
    WorkorderWorkstepEquipmentBooking:
      description: Bookings for Equipments setup at an organizationUnit during a WorkorderWorkstep
        Quantity Booking.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - equipmentId
      - equipmentPartId
      - usages
      - failures
      - workorderWorkstepId
      - workorderId
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equioment used for this booking
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the equipment (EquipmentDefinition) used
              for this booking
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        failuresTotal:
          format: int32
          description: Number of total failures of the equipment after the booking
          minimum: 0
          type: integer
        id:
          $ref: '#/components/schemas/WorkorderWorkstepEquipmentBookingPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
        usagesTotal:
          format: int32
          description: Number of total usages of the equipment after the booking
          minimum: 0
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    MaterialBinMeasurementBookingSourceType:
      description: "Source of the measurement: Was the measurement done LOCALY or\
        \ is the date provided by the PRODUCER?"
      enum:
      - PRODUCER
      - LOCAL
      type: string
    OrganizationUnitWorkorderActivationHistoryView:
      description: Historical activations of an organizationUnit for a Workorder at
        a Workstep
      type: object
      properties:
        activationStamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the activation was done
            readOnly: true
        activationUserName:
          description: Ident of the User who had done the activation
          type: string
        deactivationStamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the activation was deactivated
            readOnly: true
        deactivationUserName:
          description: Ident of the User who had done the deactivation
          type: string
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that was activated
        topOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: "The OrganizationUnit that was used for activation, that\
              \ can be the organizationUnit(station) itself or the parent of the organizationUnit(line)"
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit was activated for
        workorderCluster:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterBase'
          - description: The WorkorderCluster of the activation. Can be null
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit was activated
              for
    BookingType:
      description: Used in Quantity Views to differ which type of bookings the quantities
        belong to
      enum:
      - SERIALUNIT
      - WORKORDER_WORKSTEP
      type: string
    SerialunitMergeHistoryView:
      description: A MergeHistory of a ParentSerialunit with one (Child)-Serialunit
        with its workorder and Part wrapped as SerialunitView
      type: object
      properties:
        serialunitMergeHistory:
          allOf:
          - $ref: '#/components/schemas/MergeSerialunitHistory'
          - description: The MergeHistory for one Merge
        serialunitView:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: SerialunitView Object with the Child-Serialnumber that is/was
              merged into the ParentSerialunit
      readOnly: true
    TextComponent:
      description: "Fix Text as a part of an ID (Only certain fields are updatable\
        \ when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - text
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        text:
          description: Text to use as part of the generated ID
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    SerialunitEquipmentBookingPk:
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        equipmentId:
          $ref: '#/components/schemas/UUID'
        serialunitId:
          $ref: '#/components/schemas/UUID'
    AssignmentCondition:
      description: Connection between Assignment and MDC-Condition. Updates to a AssignmentCondition
        will be stored in an audit-trail.
      required:
      - assignmentId
      - conditionId
      type: object
      properties:
        assignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Assignment
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderClusterItemView:
      description: View for WorkorderClusterItems
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          $ref: '#/components/schemas/UUID'
        part:
          $ref: '#/components/schemas/Part'
        position:
          type: string
        stamp:
          $ref: '#/components/schemas/OffsetDateTime'
        version:
          format: int64
          type: integer
        workorder:
          $ref: '#/components/schemas/Workorder'
    WorkorderClusterItem:
      description: Item in a cluster of workorders
      required:
      - workorderId
      - position
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        position:
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
    Duration:
      format: duration
      type: string
      example: P1D
    Serialunit:
      description: Serialunit e.g. PCB. Updates to a Serialunit will be stored in
        an audit-trail.
      required:
      - lockedState
      - unitState
      - parent
      - lastBookState
      - lastBookWorkstepId
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        description:
          type: string
        externalId:
          description: Identifier used by external system
          type: string
        externalNotified:
          description: External system has sent a notification for this object
          type: boolean
        handlingUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the HandlingUnit
        handlingUnitPosition:
          description: Position of a HandlingUnit. Can be null
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - example: 3000-12-13T00:00:00.0Z
        lastBookState:
          allOf:
          - $ref: '#/components/schemas/SerialunitBookingState'
          - description: Last booked State of the Serialunit
            deprecated: true
        lastBookWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of last booked Workstep of the Serialunit
            deprecated: true
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
        mergeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the Serialunit was Merged
        mergeLocation:
          description: BOM-Location of the Parent-BOM the Merge is done for
          type: string
        mergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId who has done the merge of this serialunit
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Minimum Bookdate of the Serialunit. May be null if no booking
              done so far.
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Multipanel the Serialunit is part of. Only set if
              the Serialunit is part of a Multipanel
            nullable: true
        multipanelPosition:
          description: Position of the Serialunit in a Multipanel. Only set if the
            Serialunit is part of a Multipanel
          type: string
          nullable: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originates from system
        parent:
          description: If true the serialunit has merged (Child)Serilaunits
          type: boolean
        parentSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the ParentSerialunit when merged. Null if not merged
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        storableContainerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: |-
              Id of the stored object that contains this.
              Is set when the Object is stored via Storage Service
        storableContainerType:
          description: |-
            Name of the type of the stored object that contains this.
            Is set when the Object is stored via Storage Service
          type: string
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the StoragePlace. Is set when the MaterialBin is stored
              via Storage Service
        storagePlaceName:
          description: Name of the StoragePlace. Is set when the MaterialBin is stored
            via Storage Service
          type: string
        unitState:
          $ref: '#/components/schemas/SerialunitState'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
    WorkstepType:
      description: Type of the workstep
      enum:
      - MACHINE
      - HUMAN
      type: string
    BookingPerDayPk:
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    ImportRTOBase:
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
    Area:
      description: Dimension Area
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    HistoryUUIdentifiableObject:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/UUIdentifiableObject'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    ImportRTOUnidentifiableProcessEquipmentBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    SmtEquipmentType:
      description: Fixed defined SmtEquipmentTypes
      enum:
      - NOZZLE
      - FEEDER
      - HEAD
      - TESTER
      - TRAY
      - SETUP_TABLE
      - PREPARE_TABLE
      type: string
      deprecated: true
    WorkorderWorkstepEquipmentBookingGrouped:
      description: "WorkorderWorkstepEquipmentBooking grouped by equipment_id, setup_postition"
      type: object
      properties:
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "EquipmentId, Part of the Group Key"
        equipmentView:
          allOf:
          - $ref: '#/components/schemas/EquipmentView'
          - description: Equipment View
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First Book Date
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last Book Date
        qtyBookings:
          format: int64
          description: Amount of Bookings for Group Key
          type: integer
        setupPosition:
          description: "SetupPosition, Part of the Group Key"
          type: string
        sumFailures:
          format: int64
          description: Sum of Failures for Group Key
          type: integer
        sumUsages:
          format: int64
          description: Sum of Usages for Group Key
          type: integer
      readOnly: true
    MaterialBinBaseDTO:
      description: MaterialBinBaseDTO import data to create a materialBin.
      type: object
      properties:
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer for whom the materialbin is needed
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    MaterialSetupDTO:
      description: MaterialSetup data for a given SetupPosition with the materialBin
        setup on this setupPosition and the quantity consumed of each materialbin.<BR>
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer for whom the materialbin is needed
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    OrganizationUnitConditionMessage:
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        condition:
          $ref: '#/components/schemas/ConditionView'
        id:
          $ref: '#/components/schemas/UUID'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        payload:
          type: string
        shiftId:
          $ref: '#/components/schemas/UUID'
        stillCurrentCondition:
          type: boolean
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    WorkstepEquipmentDTO:
      description: Equipment required at a workstep of a workorder
      required:
      - partName
      - location
      type: object
      properties:
        alternatives:
          description: List of Alternatives for this equipment
          type: array
          items:
            $ref: '#/components/schemas/WorkstepEquipmentAlternativeDTO'
        location:
          type: string
        partName:
          description: Name of a equipment-part
          type: string
        quantity:
          format: int32
          type: integer
    ParallelSerialunitBookingSerialunitViewFilter:
      description: Filter for Parallel SerialunitBookings
      required:
      - fromDate
      - toDate
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Filter for OrganizationUnitId
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
    OrganizationUnitHandlingUnitSetup:
      description: Updates to a OrganizationUnitHandlingUnitSetup will be stored in
        an audit-trail.
      required:
      - handlingUnitId
      - organizationUnitId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        handlingUnitId:
          $ref: '#/components/schemas/UUID'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ProcessEquipmentBooking:
      description: Bookings for Equipments setup at an organizationUnit during a WorkorderWorkstep
        Quantity Booking.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - equipmentId
      - equipmentPartId
      - usages
      - failures
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equioment used for this booking
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the equipment (EquipmentDefinition) used
              for this booking
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        failuresTotal:
          format: int32
          description: Number of total failures of the equipment after the booking
          minimum: 0
          type: integer
        id:
          $ref: '#/components/schemas/ProcessEquipmentBookingPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ShiftId for this Booking, can be null"
            nullable: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
        usagesTotal:
          format: int32
          description: Number of total usages of the equipment after the booking
          minimum: 0
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SkillBase:
      description: "Definition of a skill, e.g. 'driving licence'"
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepOrganizationUnitLockGroup:
      description: "WorkorderWorkstepOrganizationUnitLockGroup Entity. Assigns LockGroups\
        \ to a WorkorderWorkstepOrganizationUnit. Each Serialnumber booked a the defined\
        \ workorder, workstep and machine will be marked as locked with the LockGroups\
        \ defined here. Updates to a WorkorderWorkstepOrganizationUnitLockGroup will\
        \ be stored in an audit-trail."
      required:
      - workorderWorkstepOrganizationUnitId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the LockGroup defined in LockService
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnit
    QuantityMaterialBookingView:
      description: "MaterialBookingView is a Join over MaterialBooking, MaterialBin,\
        \ MaterialBinPart, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the MaterialBooking
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        quantity:
          format: double
          description: Quantity
          type: number
        setupPosition:
          description: Setup Position
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    WorkorderWorkstepBookingViewFilter:
      description: "Filter for Serialunit-Bookings, contains Part,Workorder, Workstep,\
        \ OrganizationUnit and BookDate From-To"
      required:
      - fromDate
      - toDate
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        organizationUnitName:
          type: string
        partId:
          $ref: '#/components/schemas/UUID'
        partName:
          type: string
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
        workorderClusterId:
          $ref: '#/components/schemas/UUID'
        workorderClusterName:
          type: string
        workorderClusterPosition:
          type: string
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderName:
          type: string
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
        workstepId:
          $ref: '#/components/schemas/UUID'
        workstepName:
          type: string
    Multipanel:
      description: Combination of multiple serialunits on one panel
      required:
      - workorderId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        name:
          description: Name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
    OrganizationUnitWorkerRegistrationView:
      description: Active Users History by an OrganizationUnit
      type: object
      properties:
        isLineRegistration:
          description: Was the registration done by a Line login
          type: boolean
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        registerDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Registration date
        registerUserName:
          description: Username who has registered the Worker
          type: string
        workerDescription:
          description: Description of the worker that is registered at the station
          type: string
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the worker that is registered at the station
        workerName:
          description: Name of the worker that is registered at the station
          type: string
      readOnly: true
    Action:
      enum:
      - CREATED
      - MODIFIED
      - DELETED
      type: string
    OrganizationUnitEquipmentSetup:
      description: Updates to a OrganizationUnitEquipmentSetup will be stored in an
        audit-trail.
      required:
      - equipmentId
      - organizationUnitId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentId:
          $ref: '#/components/schemas/UUID'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderView:
      description: "Complete structure for a Workorder with produced part, workstep\
        \ and bomItems."
      type: object
      properties:
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part produced by the Workorder
        workorder:
          $ref: '#/components/schemas/Workorder'
        workorderWorkstepViewList:
          description: "Worksteps of the Workorder, with details (BomItems, etc.)"
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepView'
    LockEntity:
      description: Lock of an Entity
      required:
      - lockGroupId
      - entityId
      - entityType
      - entityName
      - userName
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        entityId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        entityName:
          type: string
          readOnly: true
        entityType:
          type: string
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        userName:
          type: string
          readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    MaterialBinSectionDTO:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable.
      required:
      - sectionStart
      - sectionEnd
      type: object
      properties:
        deleteRequest:
          description: "If true Deletion of the Section is requested.<BR> Caution:\
            \ Deletion don't check if the Section might be referenced by measurements."
          type: boolean
        description:
          description: Optional description of the section
          type: string
        lockGroupName:
          description: "Section will be locked after creating when a LockGroupName\
            \ is passed.<BR/>If a lockGroup with that name already exists, the Lock\
            \ will be assigned to that lockGroup, otherwise a new LockGroup will be\
            \ created"
          type: string
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: "Producer datecode of the orderName of the materialbinSection.<BR>Has\
            \ to be given togehter with materialChargeName, otherwise the materialCharge\
            \ will be inherited from it's materialBin."
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeName:
          description: "Producer OrderName of the materialbinSection. If not given\
            \ on create, it will be inherited from it's materialBin."
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        name:
          description: "Name of the section, if empty name is set: [MaterialBinName]-[SectionStart],\
            \ e.g. MatBin001-12.3"
          type: string
        sectionEnd:
          format: double
          description: End of the section
          type: number
        sectionStart:
          format: double
          description: Start of the section<BR>The section range may not overlap with
            other sections
          type: number
    WorkorderEquipmentSetup:
      required:
      - equipmentId
      - organizationUnitId
      - workorderWorkstepId
      - validFrom
      - validTo
      - workorderId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentId:
          $ref: '#/components/schemas/UUID'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        validFrom:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        validTo:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    QuantityMaterialBookingViewGrouped:
      description: MaterialBookingViewGrouped is MaterialBookingView grouped by Part
        and Location
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'First Book Date '
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Last Book Date '
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the MaterialBooking
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        maxMaterialBinSectionReferenceEnd:
          format: double
          description: Max. End Position/Reference in Section of the materialBin
          type: number
        maxMaterialBinSectionReferenceStart:
          format: double
          description: Max. Start Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReferenceEnd:
          format: double
          description: Min. End Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReferenceStart:
          format: double
          description: Min. Start Position/Reference in Section of the materialBin
          type: number
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        qtyBookings:
          format: int32
          description: 'Anount of Bookings for Group Key '
          type: integer
        quantity:
          format: double
          description: Quantity
          type: number
        setupPosition:
          description: Setup Position
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    ElectricCapacitance:
      description: Dimension ElectricCapacitance
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    DurationPerDayPk:
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
    CycleTime:
      description: Time needed for Production/Setup
      type: object
      properties:
        cycleTimeType:
          allOf:
          - $ref: '#/components/schemas/CycleTimeType'
          - description: Type for the Cycletime (Production)
            readOnly: true
        time:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "CycleTime, calculated by sum of the WorkstepPositions"
            readOnly: true
    ImportRTOEquipmentDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    MaterialBinMeasurementBookingTextual:
      description: Textual measurement for a materialBin. A Measurement is unique
        for it's name and bookdate
      required:
      - name
      - measurementUnit
      - bookDate
      - materialBinId
      - sourceType
      - partId
      - value
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        calculatedState:
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin with this ID
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximun
          type: string
        measurementUnit:
          type: string
        minimum:
          description: Minimun
          type: string
        name:
          type: string
        nominal:
          description: Nominal
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement done by a organizationUnit with this ID
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin of part with this ID
        sourceType:
          $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        state:
          description: State of the measured characteristic
          type: string
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
    TransactionRequirement:
      enum:
      - "OFF"
      - WARN
      - STRICT
      type: string
    ImportRTOUnidentifiable:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    WorkorderWorkstepView:
      type: object
      properties:
        equipments:
          description: List of Equipments required at that workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentView'
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: A Workstep of the Workorder
        workorderWorkstepBomItemViews:
          description: List of BomItems assigned to the Workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemView'
        workorderWorkstepOrganizationUnits:
          description: List of OrganzizationUnitPositions assigned to that Workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitView'
    BomItemDTO:
      description: BomItem import data
      required:
      - location
      - partName
      - unit
      - workstepName
      type: object
      properties:
        alternatives:
          description: List of Alternatives for this BomItem
          type: array
          items:
            $ref: '#/components/schemas/BomItemAlternativeDTO'
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        location:
          description: "Location of Component on the Assembly (DE: Einbauort)"
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        partName:
          description: Name of the material
          type: string
        payload:
          type: string
        processLocation:
          description: Location of the BomItem. Used for example to differ between
            solder side and component side
          type: string
        quantity:
          format: double
          type: number
        setupRequired:
          description: Setup is required for this BomItem
          default: true
          type: boolean
        unit:
          default: PIECE
          type: string
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        workstepName:
          description: Name of a Workstep on which this material is consumed
          type: string
    Condition:
      description: Definition of a Machine Data Condition. Updates to a Condition
        will be stored in an audit-trail.
      required:
      - level4
      type: object
      properties:
        color:
          allOf:
          - $ref: '#/components/schemas/GecColor'
          - description: "Color to be used, on display"
        conditionGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the condition is member of a group, this is this ID of\
              \ the group."
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        level2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: MDC-Level2 according to SEMI E 10
            readOnly: true
        level3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: MDC-Level3 according to SEMI E 10
            readOnly: true
        level4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: MDC-Level4 according to SEMI E 10
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    DayOfWeek:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    Speed:
      description: Dimension Speed
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    IdGeneratorType:
      description: "(Only certain fields are updatable when released, see field's\
        \ description)"
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    SerialunitBookingSerialunitView:
      description: SerialunitBookingSerialunitView is a Join over SerialunitBooking
        and Serialunit
      type: object
      properties:
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit which has done the booking '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit which has done the booking '
        organizationUnitName:
          description: 'Name of the OrganizationUnit which has done the booking '
          type: string
        organizationunitId:
          $ref: '#/components/schemas/UUID'
        partDescription:
          description: 'Description of the Part of the serialUnit '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Name of the Part of the SerialUniz '
        partName:
          description: 'Name of the Part of the serialUnit '
          type: string
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: Serialnumber
        serialunitBooking:
          allOf:
          - $ref: '#/components/schemas/SerialunitBooking'
          - description: 'Booking of a Serialnumber '
        workorderClusterView:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterView'
          - description: Workorder Cluster View
        workorderDescription:
          description: 'Description of the Workorder the serialUnit belongs to '
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Workorder the serialUnit belongs to '
        workorderName:
          description: 'Name of the Workorder the serialUnit belongs to '
          type: string
        workorderWorkstepDescription:
          description: 'Description of the WorkorderWorkstep the serialUnit belongs
            to '
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the WorkorderWorkstep the serialUnit belongs to '
        workorderWorkstepName:
          description: 'Name of the WorkorderWorkstep the serialUnit belongs to '
          type: string
      readOnly: true
    IdGeneratorComponentView:
      description: IdGeneratorComponent Object
      type: object
      properties:
        className:
          description: "ClassName to differ between the different Components (Counter,\
            \ DateTime, ....)"
          type: string
        idGeneratorComponent:
          $ref: '#/components/schemas/IdGeneratorComponent'
        sequenceNumber:
          format: int32
          description: sequenceNumber
          type: integer
      readOnly: true
    MaterialBinSectionView:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable.
      type: object
      properties:
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinSection
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: LockedState of the Section
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the section
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        sectionEnd:
          format: double
          description: End of the section
          type: number
        sectionStart:
          format: double
          description: Start of the section
          type: number
      readOnly: true
    CategorizedDowntime:
      description: Downtime. Aggregated & categorized by duration
      type: object
      properties:
        amountBooking:
          format: int32
          description: Amount of Bookings performed
          type: integer
        amountDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Amount of total Duration performed
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          - description: Category
        end:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: End
        start:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Start
      readOnly: true
    HistorySerialunit:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    IdGeneratorAssignment:
      description: Assignments of MasterData to an IdGenerator. Updates to a IdGeneratorAssignment
        will be stored in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
        idGeneratorTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of IdGenerator
            readOnly: true
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the MasterData, must not be in state IN_PROCESS"
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of the MasterData.
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ImportRTOMaterialBinDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OrganizationUnitProductionHistory:
      description: ProductionHistory of an OrganizationUnit
      type: object
      properties:
        amountBookings:
          format: int32
          description: 'Amount of Serialunit-Bookings for the Workorder and given
            Daterange '
          type: integer
        amountQuantityBookings:
          format: int32
          description: Amount of Quantity Bookings over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: integer
        amountSerialUnits:
          format: int32
          description: 'Amount of booked SerialUnits for the Workorder and given Daterange '
          type: integer
        amountStateFail:
          format: int32
          description: 'Amount of booked SerialUnits with State = FAIL for the Workorder
            and given Daterange '
          type: integer
        amountStateFailLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = FAIL for the
            Workorder and given Daterange '
          type: integer
        amountStateInProcess:
          format: int32
          description: 'Amount of booked SerialUnits with State = IN_PROCESS for the
            Workorder and given Daterange '
          type: integer
        amountStateInProcessLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = IN_PROCESS
            for the Workorder and given Daterange '
          type: integer
        amountStateInvalid:
          format: int32
          description: 'Amount of booked SerialUnits with State = Undefined or Null
            for the Workorder and given Daterange '
          type: integer
        amountStateInvalidLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = Undefined or
            Null for the Workorder and given Daterange '
          type: integer
        amountStatePass:
          format: int32
          description: 'Amount of booked SerialUnits with State = PASS for the Workorder
            and given Daterange '
          type: integer
        amountStatePassLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = PASS for the
            Workorder and given Daterange '
          type: integer
        amountStateScrap:
          format: int32
          description: 'Amount of booked SerialUnits with State = SCRAP for the Workorder
            and given Daterange '
          type: integer
        amountStateScrapLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = SCRAP for the
            Workorder and given Daterange '
          type: integer
        endDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'EndDate-Filter of the OrganizationUnitProductionHistory
              to search for '
        estimationCycleTime:
          format: double
          description: 'Estimation CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: number
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'First Bookdate of a SerialunitBooking in the given DateRange '
        firstBookedSerialUnitDescription:
          description: 'First Booked SerialUnitDescription of the Workorder for given
            DateRange '
          type: string
        firstBookedSerialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First Booked SerialUnitId of the Workorder for given DateRange '
        firstBookedSerialUnitName:
          description: 'First Booked SerialUnitName of the Workorder for given DateRange '
          type: string
        firstQuantityBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First Bookdate over all QuantityBookings for Workorder/Workstep/Organizationunit
              and the given DateRange
        hasEquipment:
          description: 'Are there Serialunit-Equipment bookings existing for the Workorder
            and given Daterange '
          type: boolean
        hasFailures:
          description: 'Are there Serialunit-Failure bookings existing for the Workorder
            and given Daterange '
          type: boolean
        hasMaterial:
          description: 'Are there Serialunit-Material bookings existing for the Workorder
            and given Daterange '
          type: boolean
        hasMeasurementNumeric:
          description: 'Are there Serialunit-MeasurementNumeric bookings existing
            for the Workorder and given Daterange '
          type: boolean
        hasMeasurementTextual:
          description: 'Are there Serialunit-MeasurementTextual bookings existing
            for the Workorder and given Daterange '
          type: boolean
        hasSmtEquipment:
          description: 'Are there Serialunit-SmtEquipment bookings existing for the
            Workorder and given Daterange '
          type: boolean
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Last Bookdate of the Workorder for given DateRange '
        lastBookedSerialUnitDescription:
          description: 'Last Booked SerialUnitDescription of the Workorder for given
            DateRange '
          type: string
        lastBookedSerialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last Booked SerialUnitId of the Workorder for given DateRange '
        lastBookedSerialUnitName:
          description: 'Last Booked SerialUnitName of the Workorder for given DateRange '
          type: string
        lastQuantityBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last Bookdate over all QuantityBookings for Workorder/Workstep/Organizationunit
              and the given DateRange
        maxCycleTime:
          format: int64
          description: 'Maximum CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: integer
        minCycleTime:
          format: int64
          description: 'Minimum CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        partDescription:
          description: 'Description of the Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Part '
        partName:
          description: 'Name of the Part '
          type: string
        quantityFail:
          format: double
          description: Sum of FAIL quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityFirstPass:
          format: double
          description: Sum of FIRST_PASS quantities over all QuantityBookings for
            Workorder/Workstep/Organizationunit and the given DateRange
          type: number
        quantityInProcess:
          format: double
          description: Sum of IN_PROCESS quantity over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityPass:
          format: double
          description: Sum of PASS quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityScrap:
          format: double
          description: Sum of SCRAP quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        startDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'StartDate-Filter of the OrganizationUnitProductionHistory
              to search for '
        sumQuantityCycleTime:
          format: int64
          description: Sum of the CycleTimes over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: integer
        sumQuantitySetupTime:
          format: int64
          description: Sum of the SetupTimes quantities over all QuantityBookings
            for Workorder/Workstep/Organizationunit and the given DateRange
          type: integer
        workorderDescription:
          description: 'Description of the Workorder '
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Workorder '
        workorderName:
          description: 'Name of the Workorder '
          type: string
        workorderTotalQuantity:
          format: double
          description: 'Total Quantity of the Workorder '
          type: number
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the WorkorderWorkstep '
        workstepDescription:
          description: 'WorkstepDescription '
          type: string
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepName:
          description: 'WorkstepName '
          type: string
      readOnly: true
    ImportBulkRTOEquipmentDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    GecQuantity:
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    BomDTO:
      description: "Bom-structure for an imported workorder. If no bom-items are defined\
        \ in smom on release of the workorder, the bom will be fetched from masterdata\
        \ and it's definition copied.\n * If a MasterBomId is given (see Workorder-Resource-API):\
        \ Load Bom from mdata for id. Else \n * If a Bom-name is given: Load newest\
        \ Bom from mdata for name and erpVersion. Else \n * Load newest Bom from mdata\
        \ for workorder's partId, and type and if given also name and erpVersion.\n\
        \   If name and/or erpVersion are given there has to be a BOM with this values.\n\
        \nOn Update of a released workorder BOM may be changed: Add or remove bomItems\
        \ and it's alternatives."
      required:
      - bomItemList
      type: object
      properties:
        bomItemList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BomItemDTO'
        erpVersion:
          type: string
        name:
          type: string
    HistoryOrganizationUnitAssignment:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitAssignment'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    MaterialBin:
      description: Container for material. Updates to a MaterialBin will be stored
        in an audit-trail.
      required:
      - lockedState
      - totalQuantity
      - currentQuantity
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        currentQuantity:
          format: double
          description: "Current MaterialBin Quantity. Must be given on creation, but\
            \ should no be updated. Will be decremented by material-bookings only."
          minimum: 0
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the customer-contact, stored in address-service"
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        description:
          description: Description
          type: string
        externalId:
          description: Identifier used by external system
          type: string
        externalNotified:
          description: External system has sent a notification for this object
          type: boolean
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate the MaterialBin was used for a Serialunit or
              WorkorderWorkstep-Booking
            readOnly: true
        lastMeasurementBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate a MeasurementBooking was done for the MaterialBin
            readOnly: true
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
        materialChargeId:
          $ref: '#/components/schemas/UUID'
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Min Booking Date of bookings for the MaterialBin. Null if
              no booking was done so far.
            readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originates from system
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: |
              Reference to the part. Will be set to the partId of the materialCharge.
              Corresponding part must not be in state IN_PROCESS
            readOnly: true
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        sectionized:
          description: MaterialBin consists of multiple sections (see MaterialBinSection).
            Only set by the server when sections are added/removed
          type: boolean
          readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the materialBin is stored: ID of the storagePlace"
            readOnly: true
        storagePlaceName:
          description: "If the materialBin is stored: Name of the storagePlace"
          type: string
          readOnly: true
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        totalQuantity:
          format: double
          description: Total MaterialBin Quantity
          minimum: 0
          type: number
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    ProcessMeasurementBookingDTO:
      description: Measurement Structure  with given MeasurementArray
      required:
      - organizationUnitName
      - measurementDataList
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "bookDate for the given pcb booking, if not given the server\
              \ date is used"
        measurementDataList:
          description: 'Measurement Data '
          type: array
          items:
            description: Measurement Structure
            required:
            - state
            - value
            - name
            - measurementUnit
            type: object
            properties:
              state:
                description: State of Booking
                type: string
              minimum:
                description: Minimum Value
                type: string
              maximum:
                description: Maximum Value
                type: string
              nominal:
                description: Nominal Value
                type: string
              tolerance:
                description: Tolerance Value
                type: string
              value:
                description: Value of Measurement
                type: string
              name:
                description: Name of the Measurement
                type: string
              type:
                description: Type of the Measurement
                type: string
              measurementUnit:
                description: Unit of the Measurement
                type: string
              characteristicId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: ID of the Characteristic(Testplan)
              testboardId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: ID of the SMOM-Testboard (only supported for numeric
                    Measurements)
              testboardName:
                description: Name of an external Testplan (only supported for numeric
                  Measurements)
                type: string
              toleranceMinimum:
                description: Tolerance Minimum Value
                type: string
              toleranceMaximum:
                description: Tolerance Maximum Value
                type: string
              lowerActionLimit:
                description: Lower Action Limit Value
                type: string
              upperActionLimit:
                description: Upper Action Limit Value
                type: string
              lowerScrapLimit:
                description: Lower Scrap Limit Value
                type: string
              upperScrapLimit:
                description: Upper Scrap Limit Value
                type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit(optional). Can be set if available
              otherwise use OrganizationUnitName instead
        organizationUnitName:
          description: Name of the station that performes the booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part(optional). Can be set if available otherwise
              use WorkorderName instead
        partName:
          description: Name of the Product the Process Booking belongs to
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Testboard(optional).
        testboardName:
          description: Name of the Testboard the Process Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder(optional). Can be set if available otherwise
              use WorkorderName instead
        workorderName:
          description: Name of the Workorder the Process Booking belongs to
          type: string
    Equipment:
      description: Equipment used in production. Updates to a Equipment will be stored
        in an audit-trail.
      required:
      - lockedState
      - maintenanceIntervalGroups
      - equipmentTypeId
      - partId
      - usageFactor
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        description:
          description: Description
          type: string
        equipmentTypeId:
          $ref: '#/components/schemas/UUID'
        failures:
          format: int32
          type: integer
          readOnly: true
        failuresTotal:
          format: int32
          type: integer
          readOnly: true
        finalExpiration:
          allOf:
          - $ref: '#/components/schemas/FinalMaintenanceInterval'
          - description: "Final Expiration. If expired, the Object must be discarded,\
              \ should not longer be used!"
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasProcessEquipmentBookings:
          type: boolean
          readOnly: true
        hasSerialunitEquipmentBookings:
          type: boolean
          readOnly: true
        hasWorkorderWorkstepEquipmentBookings:
          type: boolean
          readOnly: true
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
        maintenanceIntervalGroups:
          description: each MaintenanceIntervalGroup-name has to be unique
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceIntervalGroup'
        maintenanceState:
          allOf:
          - $ref: '#/components/schemas/MaintenanceState'
          - readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        nextDurationMaintenance:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Available for duration-based MaintenanceInterval only
            readOnly: true
        nextDurationMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for duration-based MaintenanceInterval only
            readOnly: true
        nextFailureMaintenance:
          format: int32
          description: Available for failure-based MaintenanceInterval only
          type: integer
          readOnly: true
        nextFailureMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for failure-based MaintenanceInterval only
            readOnly: true
        nextUsageMaintenance:
          format: int32
          description: Available for usage-based MaintenanceInterval only
          type: integer
          readOnly: true
        nextUsageMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for usage-based MaintenanceInterval only
            readOnly: true
        openFailures:
          format: int32
          description: Get number of failures to be booked before next failure-maintenance
            is required. Available for failure-based MaintenanceInterval only
          type: integer
          readOnly: true
        openUsages:
          format: int32
          description: Get number of usages to be booked before next failure-maintenance
            is required. Available for usage-based MaintenanceInterval only
          type: integer
          readOnly: true
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Corresponding part must not be in state IN_PROCESS
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the producer, null if there is no producer"
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the materialBin is stored: ID of the storagePlace"
            readOnly: true
        storagePlaceName:
          description: "If the materialBin is stored: Name of the storagePlace"
          type: string
          readOnly: true
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the supplier, null if there is no supplier"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
        usages:
          format: int32
          type: integer
          readOnly: true
        usagesTotal:
          format: int32
          type: integer
          readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    GroupKeyEnum:
      description: Fixed defined GroupKeys
      enum:
      - PRODUCT
      - STATION
      type: string
    MultipanelSerialUnitBookingStateDTO:
      description: 'MultipanelSerialUnitBookingState data '
      required:
      - organizationUnitName
      - workstepName
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Multipanel (UUID), is set from the server"
            readOnly: true
        multiPanelName:
          description: Name of the Multipanel.
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        serialunitName:
          description: Name of a Serialunit. Used to identify a Multipanel.
          type: string
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    HandlingUnitSerialunit:
      description: Object to assign multiple Serialunits to a HandlingUnit
      required:
      - serialunitName
      type: object
      properties:
        handlingUnitPosition:
          description: Position of the SerialUnit in a HandlingUnit
          type: string
        serialunitName:
          description: Name of a SerialUnit
          type: string
        workorderName:
          description: "Name of a Workorder, must be given if SerialunitName is not\
            \ unique"
          type: string
    PredictionRunResult:
      description: Prediction Run Result
      required:
      - predictionRunId
      - created
      - stamp
      - type
      - typePayload
      - fromDate
      - toDate
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        predictionRunId:
          format: int64
          type: integer
        qtyUsed:
          format: int64
          type: integer
        qtyUsedTotal:
          format: int64
          type: integer
        qtyUsedTotalWithFailure:
          format: int64
          type: integer
        qtyUsedWithFailure:
          format: int64
          type: integer
        stamp:
          $ref: '#/components/schemas/OffsetDateTime'
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
        type:
          type: string
        typePayload:
          type: string
          readOnly: true
      readOnly: true
    CurrentCounter:
      description: CurrentCounter of an IdGenerator and MasterData
      required:
      - idGeneratorId
      - masterDataId
      - currentValue
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        currentValue:
          description: current value of the counter
          type: string
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
        lastGenerated:
          description: last generated ID
          type: string
          readOnly: true
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterData
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitWorkerRegistration:
      description: Workers curently registered at a OrganizationUnit
      required:
      - organizationUnitId
      - workerId
      - stamp
      - created
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation date of the server.
            readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the Worker is registered to
        registerDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Optional, Registration Date provided by the registration,\
              \ otherwise same as created"
        registerOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was ued to register the Worker.
              Set from the server to Line or Station that was used to register the
              user.
            readOnly: true
        registerUsername:
          description: Username who has registered the worker at the station.
          type: string
          readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last change date of the tuple
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Worker that is registered at the organizationUnit
    WorkorderErpState:
      description: |
        Defined Workorder ERP States.
         * CREATED corresponds to Release-STATE IN_PROCESS
         * RELEASED, PARTLY_CONFIRMED and COMPLETELY_CONFIRMED correspond to Release-STATE RELEASED
         * MARKED_FOR_DELETION corresponds to Release-STATE ARCHIVED
         * LOCKED will keep the current Release-STATE
      enum:
      - CREATED
      - RELEASED
      - PARTLY_CONFIRMED
      - COMPLETELY_CONFIRMED
      - LOCKED
      - MARKED_FOR_DELETION
      type: string
    OrganizationUnitMessageView:
      description: "OrganizationUnitMessageView contains Message, OrganizationUnitMessage"
      type: object
      properties:
        messageView:
          $ref: '#/components/schemas/MessageView'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMessage:
          $ref: '#/components/schemas/OrganizationUnitMessage'
      readOnly: true
    DateTimeComponent:
      description: "Date or Time as a part of an ID (Only certain fields are updatable\
        \ when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - dateTimeFormat
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        dateTimeFormat:
          description: DateTimeFormat-String defining a Date/Time-String as part of
            the generated ID
          type: string
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        zoneId:
          description: "Id of the TimeZone, if not provided, configured default will\
            \ be used. See API 'systeminfo/zoneids'"
          type: string
          example: Europe/Berlin
    GecWarning:
      description: A WarnCondition that was found during processing the businesslogic.
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
    OrganizationUnitMaterialBinSetupView:
      description: View Object of OrganizationUnitMaterialBinSetup
      type: object
      properties:
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMaterialBinSetup:
          $ref: '#/components/schemas/OrganizationUnitMaterialBinSetup'
    MessageGroup:
      description: Defintion of a Message Group. Updates to a MessageGroup will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepEquipmentSetupDTO:
      description: Setup data for a given SetupPosition with the equipment setup on
        this setupPosition
      required:
      - usageFactor
      - setupPosition
      - usages
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        name:
          description: Name of the equipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        setupPosition:
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
    Density:
      description: Dimension Density
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    HistoryOrganizationUnitEquipmentSetupView:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitEquipmentSetupView'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    EquipmentDTO:
      description: EquipmentDTO import data to create a equipment.
      required:
      - usageFactor
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        name:
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    Assignment:
      description: Definition of an Assignment. Updates to a Assignment will be stored
        in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ConnectionPoolMetrics:
      type: object
      properties:
        acquireCount:
          format: int64
          type: integer
        activeCount:
          format: int64
          type: integer
        availableCount:
          format: int64
          type: integer
        awaitingCount:
          format: int64
          type: integer
        blockingTimeAverage:
          $ref: '#/components/schemas/Duration'
        blockingTimeMax:
          $ref: '#/components/schemas/Duration'
        blockingTimeTotal:
          $ref: '#/components/schemas/Duration'
        creationCount:
          format: int64
          type: integer
        creationTimeAverage:
          $ref: '#/components/schemas/Duration'
        creationTimeMax:
          $ref: '#/components/schemas/Duration'
        creationTimeTotal:
          $ref: '#/components/schemas/Duration'
        destroyCount:
          format: int64
          type: integer
        flushCount:
          format: int64
          type: integer
        invalidCount:
          format: int64
          type: integer
        leakDetectionCount:
          format: int64
          type: integer
        maxUsedCount:
          format: int64
          type: integer
        reapCount:
          format: int64
          type: integer
    HistorySerialunitReservedNumber:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/SerialunitReservedNumber'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    Originator:
      enum:
      - CatenaX
      - DPS
      type: string
    GecUnitDescription:
      type: object
      properties:
        dimension:
          type: string
        name:
          type: string
        symbol:
          type: string
        type:
          $ref: '#/components/schemas/Type'
    ReleaseState:
      description: State of a Releasable
      enum:
      - IN_PROCESS
      - RELEASED
      - ARCHIVED
      type: string
    TopFailureLocation:
      description: Object for TopFailures for a Part and Location
      type: object
      properties:
        location:
          description: Location where the failure occurs
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: name of the Part
          type: string
    WorkorderWorkstepEquipment:
      description: Equipment needed at a workstep of a workorder. A workstep-equipment
        is not releasable by itself but inherits the release-state from it's workorder.
        (No longer updatable when released). Updates to a WorkorderWorkstepEquipment
        will be stored in an audit-trail.
      required:
      - quantity
      - partId
      - workorderWorkstepId
      - location
      type: object
      properties:
        alternatives:
          description: Alternatives for a equipment at a workorderWorkstep have to
            be unique (it's not allowed to have the same EquipmentPart as an alternative
            twice)
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentAlternative'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        location:
          description: Location has to be unique for all equipments assigned to one
            workorderWorkstep
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the part/equipmentDefinition of this equipment
        quantity:
          format: int32
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "References the workorderWorkstep, this equipment belongs\
              \ to"
    OrganizationUnitMessagePK:
      type: object
      properties:
        itemId:
          type: string
        messageId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
    MaterialBinSection:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable. Updates to a MaterialBinSection will be stored in
        an audit-trail.
      required:
      - lockedState
      - materialBinId
      - sectionStart
      - sectionEnd
      - materialChargeId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the parent materialBin of the section
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the materialCharge of the section. If not given on\
              \ create, it will be inherited from it's materialBin."
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        sectionEnd:
          format: double
          description: End of the section
          type: number
        sectionStart:
          format: double
          description: Start of the section
          type: number
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    BookingPerShiftPk:
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        shiftId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    MasterDataType:
      description: Type of Masterdata that can be used as component of an id-generator
      enum:
      - PART
      - WORKORDER
      - ORGANIZATION_UNIT
      type: string
    FailureType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    SerialunitViewFilterMode:
      enum:
      - created
      - lastBookDate
      type: string
    MaterialBinView:
      type: object
      properties:
        customerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Customer of the MaterialBin
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the MaterialBin
        measurementsNumeric:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementBookingNumericView'
        measurementsTextual:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementBookingTextualView'
        organizationUnitMaterialBinSetupView:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitMaterialBinSetupView'
          - description: Setup Infos for the MaterialBin
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the MaterialBin
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the MaterialBin
        sections:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSectionView'
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the MaterialBin
      readOnly: true
    SerialunitFailureBookingView:
      description: SerialunitFailureBookingView is a Join over FailureBooking and
        Serialunit
      type: object
      properties:
        failureAction:
          description: 'Failure Action '
          type: string
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: 'Failure Comment '
          type: string
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        isPseudo:
          description: 'is Pseudo '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        serialunitDescription:
          description: 'Description of the Serialunit '
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Serialunit '
        serialunitName:
          description: 'Name of the Serialunit '
          type: string
        serialunitPosition:
          description: 'Position of the Serialunit '
          type: string
      readOnly: true
    ElectricResistance:
      description: Dimension ElectricResistance
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    PreviewResult:
      description: Result of a Preview Call
      type: object
      properties:
        value:
          description: Preview Value
          type: string
          readOnly: true
    SerialunitMeasurementBookingTextualView:
      description: "MeasurementBookingTextualView is a Join over MeasurementBookingTextual,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        calculatedState:
          description: Calculated
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the Measurement
        maximum:
          description: Maximum
          type: string
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          description: Minimum
          type: string
        name:
          description: Name
          type: string
        nominal:
          description: Nominal
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        state:
          description: State
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    WorkorderWorkstep:
      description: "Workstep Entity for a Workorder. (Only certain fields are updatable\
        \ when released, see field's description). Updates to a WorkorderWorkstep\
        \ will be stored in an audit-trail."
      required:
      - mandatory
      - type
      - name
      - processLocation
      - setupTimeWorker
      - setupTimeMachine
      - processingTimeWorker
      - processingTimeMachine
      - transportTime
      - workorderId
      - waitTime
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this workstep, incremented\
            \ with each workorderWorkstepBooking"
          type: integer
          readOnly: true
        amountSerialunitBookings:
          format: int32
          description: "Amount of SerialunitBookings done for this workstep, incremented\
            \ with each serialunitUpload"
          type: integer
          readOnly: true
        confirmationNumber:
          description: Unique workorder dependend ConfirmationNumber for a workstep
            given from the ERP-System. It is sent back with each confirmation of that
            Workorder-Workstep to the ERP-System. Can be used in Upload Booking. <BR/>Master
            Workplan have no ConfirmationNumber!
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description of this WorkorderWorkstep (AVO) (Updatable when
            released)
          type: string
        erpConfirmation:
          description: If TRUE bookings at this workstep has to be confirmed to the
            ERP-System
          default: false
          type: boolean
        erpConfirmationThreshold:
          format: int32
          description: "Threshold of amount of units that can be booked, before the\
            \ confirmation to the ERP-System is done, e.g. setting to 10 send a ERP-Confirmation\
            \ when 10 units are booked"
          type: integer
        erpVersion:
          description: Version of this workstep in ERP
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        jobParallel:
          format: int32
          description: parallel job order
          minimum: 0
          type: integer
        jobSequentiell:
          format: int32
          description: sequentiell job order
          minimum: 0
          type: integer
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of the lastBooking (quantity or serialunit) to this
              workstep
            readOnly: true
        mandatory:
          description: Is this WorkorderWorkstep a mandatory Step
          type: boolean
        masterWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workstep im MasterData-Service
        maxBookingCountWorkstep:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit at this
            Workstep.</B> Values greater than 0 restrict the amount of Bookings.
          minimum: 0
          type: integer
        maxBookingCountWorkstepOrganizationUnit:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit for a
            Station at this Workstep.</B> Values greater than 0 restrict the amount
            of Bookings at one Station in the Workstep.
          minimum: 0
          type: integer
        name:
          description: Name of this WorkorderWorkstep (AVO)
          type: string
        payload:
          description: Optional Payload as Json-String (Updatable when released)
          type: string
        position:
          format: int64
          description: Position/Order of this Workstep
          type: integer
          readOnly: true
        processLocation:
          description: Location the Workstep is working at. Used for example to differ
            between solder side and component side
          type: string
        processingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a machine
              (Updatable when released)
        processingTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a worker
              (Updatable when released)
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings in this workstep
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Quantity of First PASS Bookings in this workstep
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: "Quantity of InProcess Bookings at this workstep, Use InProcess\
            \ only for long running process steps"
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Quantity of PASS Bookings in this workstep
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings in this workstep
          type: number
          readOnly: true
        requiredSkills:
          description: Set of required skills to operate
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RequiredSkill'
        setupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a machine
              (Updatable when released)
        setupTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a worker
              (Updatable when released)
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: "For updates of workstepState use API PUT /resources/workorderworksteps/{id}/state/{state}"
            default: READY
            readOnly: true
        transportTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Transport (Updatable when released)
        type:
          allOf:
          - $ref: '#/components/schemas/WorkstepType'
          - description: "Type of this Workstep(Machine, Human, ....)"
            example: MACHINE
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        waitTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Wait (Updatable when released)
        workcenterName:
          description: Name of the workcenter
          type: string
        workerCountProduction:
          format: int32
          description: Number of workers needed to perform this workstep (Updatable
            when released)
          minimum: 0
          type: integer
        workerCountSetup:
          format: int32
          description: Number of workers needed to setup this workstep (Updatable
            when released)
          minimum: 0
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
      readOnly: true
    MaintenanceIntervalGroup:
      description: |
        Combination of a number of MaintenanceIntervals for a certain reason
        (e.g. 'Inspection' has two MaintenanceIntervals: every 10.000 usages and once a year)
      required:
      - name
      - items
      type: object
      properties:
        items:
          description: each MaintenanceInterval-name has to be unique (Must not be
            empty)
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceInterval'
        name:
          pattern: \S
          type: string
    EquipmentSetupDTO:
      description: EquipmentSetup data for a given SetupPosition
      required:
      - usageFactor
      - setupPosition
      - usages
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        name:
          description: Name of the equipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        setupPosition:
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
    OrganizationUnitEquipmentSetupView:
      description: View Object of OrganizationUnitEquipmentSetup
      type: object
      properties:
        equipment:
          $ref: '#/components/schemas/Equipment'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitEquipmentSetup:
          $ref: '#/components/schemas/OrganizationUnitEquipmentSetup'
    WorkorderWorkstepBomItemAlternative:
      description: Alternative to a WorkorderworkstepBomItem Entity. Updates to a
        WorkorderWorkstepBomItemAlternative will be stored in an audit-trail.
      required:
      - usageProbability
      - materialPartId
      - quantity
      - unitId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        masterBomItemAlternativeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding MasterData BomItem Alternative
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        payload:
          type: string
        quantity:
          format: double
          type: number
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ConditionView:
      description: ConditionView contains Condition and ConditionGroup
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/Condition'
        conditionGroup:
          $ref: '#/components/schemas/ConditionGroup'
      readOnly: true
    LockEntityHistory:
      description: History of a lock of an Entity
      required:
      - lockEntityId
      type: object
      properties:
        createUser:
          description: Name of user that created the lock
          type: string
        deleteUser:
          description: Name of user that removed the lock
          type: string
        entityId:
          $ref: '#/components/schemas/UUID'
        entityName:
          type: string
        entityType:
          type: string
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockEntityId:
          $ref: '#/components/schemas/UUID'
        lockGroupDescription:
          type: string
        lockGroupId:
          $ref: '#/components/schemas/UUID'
        lockGroupName:
          type: string
        lockTypeDescription:
          type: string
        lockTypeId:
          $ref: '#/components/schemas/UUID'
        lockTypeName:
          type: string
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
      readOnly: true
    LoggerLevel:
      enum:
      - "OFF"
      - SEVERE
      - ERROR
      - FATAL
      - WARNING
      - WARN
      - INFO
      - DEBUG
      - TRACE
      - CONFIG
      - FINE
      - FINER
      - FINEST
      - ALL
      type: string
    LockGroupTypeRestriction:
      description: LockGroupTypeRestriction holds a lockGroup with its lockType and
        its defined lockRestrictions
      type: object
      properties:
        lockGroup:
          allOf:
          - $ref: '#/components/schemas/LockGroup'
          - description: The lockType
        lockType:
          allOf:
          - $ref: '#/components/schemas/LockType'
          - description: The lockType
        restrictions:
          description: the lockRestriction for that lockType
          type: array
          items:
            $ref: '#/components/schemas/LockTypeLockRestriction'
    Mass:
      description: Dimension Mass
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    WorkorderWorkstepEquipmentView:
      required:
      - quantity
      - partId
      type: object
      properties:
        alternatives:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentAlternativeView'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipment:
          $ref: '#/components/schemas/Equipment'
        equipmentDefinitionView:
          $ref: '#/components/schemas/EquipmentDefinitionView'
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of exact one dedicated equipment, if null 'any' of the\
              \ EquipmentDefintion defined by partId suffices."
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        location:
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the equipmentDefinition.
        quantity:
          format: int32
          description: "Quantity will be evaluated, if not one exact, dedicated equipment\
            \ is defined but a equipmentDefinition."
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    ImportBulkRTOSerialunitDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    NameDescription:
      type: object
      properties:
        description:
          description: Description
          type: string
        name:
          description: Name
          type: string
    CurrentCounterView:
      description: View of the CurrentCounter of an IdGenerator and MasterData
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        currentValue:
          description: current value of the counter
          type: string
        lastGenerated:
          description: last generated ID
          type: string
        masterDataDescription:
          description: Description of the MasterData
          type: string
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterData
        masterDataName:
          description: Name of the MasterData
          type: string
        stamp:
          $ref: '#/components/schemas/OffsetDateTime'
      readOnly: true
    MaintenanceInterval:
      description: Maintenance Interval
      required:
      - name
      type: object
      properties:
        afterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour.
              If current usage-duration exceeds this value, a maintenance should be done.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval start is creation date.
              End is current system date.
        afterFailures:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        afterUsages:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        name:
          pattern: \S
          type: string
        warnAfterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour. May be given, only if afterDuration is given, too.
              If current usage-duration exceeds this value, a maintenance should be done soon.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval: start is creation date.
              End is current system date.
        warnAfterFailures:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterFailures is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
        warnAfterUsages:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterUsages is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
    SerialunitFailureBooking:
      required:
      - serialunitId
      - bookDate
      - failureId
      - failureLocation
      - workorderId
      - partId
      - organizationUnitId
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        failureActionId:
          $ref: '#/components/schemas/UUID'
        failureCauseId:
          $ref: '#/components/schemas/UUID'
        failureComment:
          type: string
        failureId:
          $ref: '#/components/schemas/UUID'
        failureLocation:
          type: string
        failurePatternId:
          $ref: '#/components/schemas/UUID'
        failureRiskId:
          $ref: '#/components/schemas/UUID'
        failureSymptomId:
          $ref: '#/components/schemas/UUID'
        isRepaired:
          type: boolean
        materialPartId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        partId:
          $ref: '#/components/schemas/UUID'
        repairOrgaUnitId:
          $ref: '#/components/schemas/UUID'
        serialunitId:
          $ref: '#/components/schemas/UUID'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
    MaintenanceState:
      enum:
      - AVAILABLE
      - SHOULD_BE_IN_MAINTENANCE_SOON
      - SHOULD_BE_IN_MAINTENANCE
      - IN_MAINTENANCE
      - FINALLY_EXPIRED_SOON
      - FINALLY_EXPIRED
      type: string
    BomItemAlternativeDTO:
      description: BomItem alternatives import data
      required:
      - usageProbability
      - unit
      type: object
      properties:
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        partName:
          type: string
        payload:
          type: string
        quantity:
          format: double
          type: number
        unit:
          default: PIECE
          type: string
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          type: integer
    OrganizationUnitWorkorderActivationView:
      description: Current activation of an organizationUnit for a Workorder at a
        Workstep
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that is activated
        topOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: "The OrganizationUnit that was used for activation, that\
              \ can be the organizationUnit(station) itself or the parent of the organizationUnit(line)"
        userName:
          description: Ident of the User who has done the activation
          type: string
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit is activated for
        workorderCluster:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterBase'
          - description: The WorkorderCluster of the activation. Can be null
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit is activated
              for
    WorkorderCluster:
      description: "Cluster of workorders (Only certain fields are updatable when\
        \ released, see field's description)"
      required:
      - items
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        finished:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        items:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WorkorderClusterItem'
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plannedEndDate:
          $ref: '#/components/schemas/OffsetDateTime'
        plannedStartDate:
          $ref: '#/components/schemas/OffsetDateTime'
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        processState:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterProcessState'
          - readOnly: true
        quantity:
          format: double
          minimum: 1
          type: number
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        started:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    CycleTimeType:
      description: "Types of the CycleTime (Production, Setup)"
      enum:
      - PRODUCTION
      - SETUP
      type: string
    ImportBulkRTOUnidentifiableProcessMeasurementBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item without id
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    MessageCategory:
      description: Defintion of a Message Category. Updates to a MessageCategory will
        be stored in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitAssignment:
      description: Connection between Assignment and OrganizationUnit. Updates to
        a OrganizationUnitAssignment will be stored in an audit-trail.
      required:
      - assignmentId
      - organizationUnitId
      type: object
      properties:
        assignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Assignment
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepMaterialBookingPk:
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        location:
          type: string
        materialBinId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    GecFailure:
      description: A FailureCondition that was found during processing the businesslogic.
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
    ImportRTOUnidentifiableWorkorderWorkstepBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    DurationPerShift:
      description: Consolidated durations for a OrganizationUnit per shift
      required:
      - fromDate
      - toDate
      - bookDate
      - organizationUnitId
      - organizationUnitName
      - plantId
      - lastLevel4
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: date of last booking (might be before the fromDate)
            example: 1970-01-01T00:00:00.0Z
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
        fromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation From
            example: 1970-01-01T00:00:00.0Z
        id:
          $ref: '#/components/schemas/DurationPerShiftPk'
        lastLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: Last booked MDC-Level2 according to SEMI E 10
        lastLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: Last booked MDC-Level3 according to SEMI E 10
        lastLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Last booked MDC-Level4 according to SEMI E 10
        level2Durations:
          description: Summarized duration and quantity of conditions for a Level2
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level3Durations:
          description: Summarized duration and quantity of conditions for a Level3
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level4Durations:
          description: Summarized duration and quantity of conditions for a Level4
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
        organizationUnitName:
          description: OrganizationUnit name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId for this Booking
            nullable: false
        shiftName:
          description: ShiftName for this Booking
          type: string
          nullable: false
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation To
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
      readOnly: true
    SerialunitMaterialBooking:
      description: MaterialBin setup at a setupPosition at an organizationUnit used
        to build a serialunit uploaded via a serialunitBooking.<BR>One tulple is created
        for each materialBin used for build the serialunit. Additionally the used
        SmtEquipment is available via SerialunitSmtEquipmentBooking for the involved
        (BOM)-locations
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - materialBinId
      - location
      - materialPartId
      - quantity
      - unitId
      - workorderId
      - serialunitId
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        currentQuantity:
          format: double
          description: Current quantity of materialBin after booking
          type: number
          readOnly: true
        location:
          description: "One BOM- Location that is processed with this materialBooking.If\
            \ multiple locations are processed with this booking, each individual\
            \ location has to be send in it's own materialBooking. If not given the\
            \ default:[-] is used."
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin used for this material booking
        materialBinSectionReference:
          format: double
          description: "Section of the materialBin used for this booking (valid for\
            \ sequential MaterialBins, see MaterialBinSection)"
          type: number
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the materialBin used for this material
              booking
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
        quantity:
          format: double
          description: "(Delta)-material quantity, that was consumed by this booking\
            \ from the materialBin"
          minimum: 0
          type: number
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit build with this material booking
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the unit of materialBin used for this material booking
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
    WorkorderCheckConsistencyResult:
      description: Contains all failed consistency Checks for given Workorder
      type: object
      properties:
        failureList:
          description: Contains all Failures/Failed ConsistencyChecks for the Workorder
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder that was checked
      readOnly: true
    LockGroup:
      description: Lock Group Entity. Updates to a LockGroup will be stored in an
        audit-trail.
      required:
      - lockTypeId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lockTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the LockType
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipmentCorrelation:
      description: Correlations concerning Equipment used in production
      type: object
      properties:
        equipment:
          description: ParetoAnalysis Values showing correlations to other equipment
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        failures:
          description: ParetoAnalysis Values showing correlations to failures
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        material:
          description: ParetoAnalysis Values showing correlations to material
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        materialBin:
          description: ParetoAnalysis Values showing correlations to material bins
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        positions:
          description: ParetoAnalysis Values showing correlations to positions
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
      readOnly: true
    DurationPerShiftPk:
      type: object
      properties:
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        shiftId:
          $ref: '#/components/schemas/UUID'
    MultipanelSerialunitView:
      description: View of a serialunit in a multipanel
      type: object
      properties:
        multipanelPosition:
          description: multipanelPosition
          type: string
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: serialunit
      readOnly: true
    WorkorderFinishMode:
      description: Modes to set the workorder state automatically to finish
      enum:
      - NONE
      - FINISH_ON_QUANTITY_STARTED
      - FINISH_ON_QUANTITY_FINISHED
      type: string
    IdGeneratorView:
      description: IdGenerator Object - All containing Objects are filled
      type: object
      properties:
        components:
          description: List of IdGeneratorComponentView for given IdGenerator
          type: array
          items:
            $ref: '#/components/schemas/IdGeneratorComponentView'
        currentCounters:
          description: List of CurrentCounters
          type: array
          items:
            $ref: '#/components/schemas/CurrentCounterView'
        idGenerator:
          $ref: '#/components/schemas/IdGenerator'
        type:
          $ref: '#/components/schemas/IdGeneratorType'
      readOnly: true
    HistoryOrganizationUnitHandlingUnitSetupView:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Changed on date
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitHandlingUnitSetupView'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    WorkorderWorkstepOrganizationUnitLockGroupHistoryView:
      description: History of Locks and Unlocks of WorkorderWorkstepOrganizationUnit
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstepOrganizationUnitLock
        lockDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date when the Lock was established to the WorkorderWorkstepOrganizationUnit
        lockGroupDescription:
          description: Description of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
          type: string
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
        lockGroupName:
          description: Name of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
          type: string
        lockUsername:
          description: UserName who established the Lock
          type: string
        unlockDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Date when the Lock was removed(unlocked) to the WorkorderWorkstepOrganizationUnit,\
              \ max be null whern the lock ist still active"
        unlockUsername:
          description: UserName who removed the Lock
          type: string
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstepOrganizationUnit the lock as assigned
              to
      readOnly: true
    EquipmentBookingViewFilter:
      description: Filter for EquipmentBookings
      required:
      - fromDate
      - toDate
      type: object
      properties:
        equipmentId:
          $ref: '#/components/schemas/UUID'
        equipmentName:
          type: string
        equipmentPartId:
          $ref: '#/components/schemas/UUID'
        equipmentPartName:
          type: string
        equipmentTypeId:
          $ref: '#/components/schemas/UUID'
        equipmentTypeName:
          type: string
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        organizationUnitName:
          type: string
        sortOrder:
          $ref: '#/components/schemas/Order'
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
    ProcessEquipmentBookingView:
      description: ProcessEquipmentBookingView returns process related equipmentBookings
        imported via import/processequipmentBookings
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date of this equipmentBooking
        equipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the equipmentBooking
        equipmentDescription:
          description: Description of the Equipment
          type: string
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equipment
        equipmentName:
          description: Name of the Equipment
          type: string
        equipmentPartDescription:
          description: Description of the EquipmentPart
          type: string
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the EquipmentPart
        equipmentPartName:
          description: Name of the EquipmentPart
          type: string
        equipmentSetupPosition:
          description: the setupPosition the equipment was placed on
          type: string
        equipmentTypeDescription:
          description: Description of the EquipmentType
          type: string
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of the Equipment
        equipmentTypeName:
          description: Name of the EquipmentType
          type: string
        failures:
          format: int32
          description: Failures booked with this booking
          type: integer
        failuresTotal:
          format: int32
          description: Total Failures of the equipment after this booking
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the Equipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the Equipment to
              process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the Equipment to
            process/placed the (BOM)-Part
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        usages:
          format: int32
          description: Usages booked with this booking
          type: integer
        usagesTotal:
          format: int32
          description: Total Usages of the equipment after this booking
          type: integer
      readOnly: true
    WorkorderClusterView:
      description: View for WorkorderCluster Item are contained
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderClusterItemView'
        workorderCluster:
          $ref: '#/components/schemas/WorkorderClusterBase'
    ProcessEquipmentBookingPk:
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        equipmentId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
    WorkorderWorkstepBookingView:
      description: Quantity Bookings of a organizationUnit for a Workorder at a Workstep
      type: object
      properties:
        booking:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBooking'
          - description: "The Booking Object, with details of the booking"
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that is activated
        partDescription:
          description: Description of the Part of the workorder
          type: string
          readOnly: true
        partName:
          description: Name of the Part of the Workorder
          type: string
          readOnly: true
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit is activated for
        workorderClusterView:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterView'
          - description: Workorder Cluster View
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit is activated
              for
    ImportRTOMultipanelSerialUnitBookingStateDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    IdGeneratorComponents:
      description: Part of an IdGenerator
      required:
      - idGeneratorId
      - sequenceNumber
      - idGeneratorComponentId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorComponentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator-Component
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
        sequenceNumber:
          format: int32
          description: Place in the sequence of IdGeneratorComponents the Id-Generator
            consists of
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SerialunitSmtEquipmentBooking:
      description: SmtEquipment used to assembling the (BOM)-location for a serialunit
        at an organizationUnit uploaded via a serialunitBooking
      required:
      - stamp
      - bookDate
      - serialunitId
      - smtEquipmentId
      - location
      - organizationUnitId
      - partId
      - materialPartId
      - workorderId
      - smtEquipmentSetupPosition
      - created
      - materialBinId
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: BookDate when the booking was done
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        location:
          description: (BOM)-Location(s) that was placed/processed with this smtEquipment
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin the SmtEquipment for the (BOM)-location
              was used for
            readOnly: true
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part of the Material placed/processed with the
              smtEquipment
        misspicks:
          format: int64
          description: MissPicks occured at the smtEquipment during processing this
            location(s)
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organizationUnit that performes the SmtEquipmentBooking
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part of the Serialunit
        picks:
          format: int64
          description: Picks done from the smtEquipment to assemble this location(s)
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit the SmtEquipmentBooking was done for
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the smtEquipment used for this SmtEquipmentBooking
        smtEquipmentSetupPosition:
          description: "SetupPosition this smtEquipment was setup at. This can be\
            \ different for every Equipment used by a Smt-Upload, e.g. a Nozzle was\
            \ setup at Pos:12 at the header and was used to place localtion R1, Pos:11\
            \ was used to place R2, ..."
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Serialunit belongs to
      deprecated: true
    MdcFact:
      description: MdcFact contains OrganizationUnitConditionHistory
      type: object
      properties:
        cbBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        cbConditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbFromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        cbId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbOuId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbShiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbToDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
    DurationQuantity:
      description: duration and quantity
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "duration, will be set if the condition ends"
        quantity:
          format: int64
          description: number of started conditions in this time-frame
          type: integer
    FlywayDbInfo:
      description: Infos from FlywayDB
      type: object
      properties:
        description:
          description: Description of the Flyway Migration
          type: string
        executionTime:
          format: int32
          description: Execution Time of the Flyway Migration
          type: integer
        installedBy:
          description: Installed By of the Flyway Migration
          type: string
        installedOn:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Installed On of the Flyway Migration
        installedRank:
          format: int32
          description: Installed Rank of the Flyway Migration
          type: integer
        script:
          description: Script of the Flyway Migration
          type: string
        success:
          description: Success of the Flyway Migration
          type: boolean
        type:
          description: Type of the Flyway Migration
          type: string
        version:
          description: Version of the Flyway Migration
          type: string
      readOnly: true
    ImportRTOUnidentifiableProcessMeasurementBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    SerialunitCheckGecFailures:
      description: "Failure-Result of checkSerialunit used for Multipanel check, to\
        \ get an individual Failure-Result for each Serialunits of the Panel"
      type: object
      properties:
        failures:
          description: List of GecFailures found during the Check of this Serialunit
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: The Serialunit the Check founds failures for
    EquipmentBookingViewGrouped:
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date of this equipmentBooking
        equipmentBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the equipmentBooking
        equipmentDescription:
          description: Description of the Equipment
          type: string
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equipment
        equipmentName:
          description: Name of the Equipment
          type: string
        equipmentPartDescription:
          description: Description of the EquipmentPart
          type: string
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the EquipmentPart
        equipmentPartName:
          description: Name of the EquipmentPart
          type: string
        equipmentSetupPosition:
          description: the setupPosition the equipment was placed on
          type: string
        equipmentTypeDescription:
          description: Description of the EquipmentType
          type: string
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of the Equipment
        equipmentTypeName:
          description: Name of the EquipmentType
          type: string
        failures:
          format: int32
          description: Failures booked with this booking
          type: integer
        failuresTotal:
          format: int32
          description: Total Failures of the equipment after this booking
          type: integer
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First Book Date
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: First SerialunitId
        firstSerialunitName:
          description: First SerialunitName
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last Book Date
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Last SerialunitId
        lastSerialunitName:
          description: Last SerialunitName
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the Equipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the Equipment to
              process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the Equipment to
            process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        qtyBookings:
          format: int32
          description: Anount of Bookings for Group Key
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        usages:
          format: int32
          description: Usages booked with this booking
          type: integer
        usagesTotal:
          format: int32
          description: Total Usages of the equipment after this booking
          type: integer
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepNumber:
          description: WorkstepNumber the Equipment was used
          type: string
      readOnly: true
    WorkorderClusterProcessState:
      description: State of process of a WorkorderCluster
      enum:
      - NEW
      - STARTED
      - FINISHED
      type: string
    EquipmentBookingDTO:
      description: EquipmentBooking for usage and failure-Count of an existing Equipment
        for a given SetupPosition at an OrganizationUnit
      required:
      - setupPosition
      - usages
      type: object
      properties:
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the equipment to book the usages for. <BR />.Either
              equipmentId or equipmentName is required.
        equipmentName:
          description: Name of the equipment to book the usages for.<BR/>Either equipmentId
            or equipmentName is required.
          type: string
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        setupPosition:
          description: setupPosition where the equipment is located at the organizationUnit.<BR/>Only
            one equipment can be used at a setupPosition of an organizationUnit at
            a point in time.
          minLength: 1
          type: string
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
    ImportBulkRTOUnidentifiableOrganizationUnitMessageDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item without id
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    WorkstepDTO:
      description: "Workstep import data (type, workcenter, etc.)"
      required:
      - name
      - mandatory
      - processLocation
      - type
      - workcenterName
      - setupTimeWorker
      - setupTimeMachine
      - processingTimeWorker
      - processingTimeMachine
      - transportTime
      - waitTime
      - state
      type: object
      properties:
        confirmationNumber:
          description: Unique workorder dependend ConfirmationNumber for a workstep
            given from the ERP-System. It is sent back with each confirmation of that
            Workorder-Workstep to the ERP-System. Can be used in Upload Booking. <BR/>Master
            Workplan have no ConfirmationNumber!
          type: string
        description:
          description: Description of this WorkorderWorkstep (AVO)
          type: string
        equipments:
          description: List of Equipments to be used at this workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkstepEquipmentDTO'
        erpConfirmation:
          description: If TRUE bookings at this workstep has to be confirmed to the
            ERP-System
          default: false
          type: boolean
        erpConfirmationThreshold:
          format: int32
          description: "Threshold of amount of units that can be booked, before the\
            \ confirmation to the ERP-System is done, e.g. setting to 10 send a ERP-Confirmation\
            \ when 10 units are booked"
          type: integer
        erpVersion:
          description: Version of this workstep in ERP
          type: string
        jobParallel:
          format: int32
          description: parallel job order
          minimum: 0
          type: integer
        jobSequentiell:
          format: int32
          description: sequentiell job order
          minimum: 0
          type: integer
        mandatory:
          description: Is this WorkorderWorkstep a mandatory Step
          type: boolean
        maxBookingCountWorkstep:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit at this
            Workstep.</B> Values greater than 0 restrict the amount of Bookings.
          minimum: 0
          type: integer
        maxBookingCountWorkstepOrganizationUnit:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit for a
            Station at this Workstep.</B> Values greater than 0 restrict the amount
            of Bookings at one Station in the Workstep.
          minimum: 0
          type: integer
        name:
          description: Name of this WorkorderWorkstep (AVO)
          type: string
        payload:
          description: Optional Payload as Json-String
          type: string
        processLocation:
          description: Location the Workstep is working at. Used for example to differ
            between solder side and component side
          type: string
        processingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a machine
        processingTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a worker
        requiredSkills:
          description: Set of RequiredSkills to be needed at this workstep
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RequiredSkill'
        setupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a machine
        setupTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a worker
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the Workstep
            default: READY
        transportTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Transport
        type:
          allOf:
          - $ref: '#/components/schemas/WorkstepType'
          - description: "Type of this Workstep(Machine, Human, ....)"
            example: MACHINE
        waitTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for wait before units can be send to the next
              workstep
        workcenterName:
          description: Name of Workcenter assigned to this workstep
          type: string
        workerCountProduction:
          format: int32
          description: Number of workers needed to perform this workstep
          minimum: 0
          type: integer
        workerCountSetup:
          format: int32
          description: Number of workers needed to setup this workstep
          minimum: 0
          type: integer
    ImportRTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    LockTypeLockRestriction:
      description: Lock Restriction for a Lock Type
      required:
      - entityType
      - name
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        description:
          description: Description of the lockRestriction for that lockType
          type: string
        entityType:
          description: the entityType of the lockable Entity that is locked by this
            restriction
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        lockTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of lockType that has the lockRestriction applied
            readOnly: true
        name:
          description: Name of the lockRestriction that is applied to this lockType
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
    OrganizationUnitHandlingUnitSetupView:
      description: View Object of OrganizationUnitHandlingUnitSetup
      type: object
      properties:
        handlingUnit:
          $ref: '#/components/schemas/HandlingUnit'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitHandlingUnitSetup:
          $ref: '#/components/schemas/OrganizationUnitHandlingUnitSetup'
    MultipanelState:
      description: State-change of the multipanel
      enum:
      - CREATED
      - SEPARATED
      type: string
    OrganizationUnitSetupEquipmentView:
      description: What is setup at a OrganizationUnit (Station)
      type: object
      properties:
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit
        setupPositions:
          description: List EquipmentSetupView
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupView'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder for which the Setup is active. May be null if no
              Setup is active
    QuantityCompare:
      type: object
      properties:
        quantityA:
          $ref: '#/components/schemas/GecQuantity'
        quantityB:
          $ref: '#/components/schemas/GecQuantity'
    ParetoValue:
      description: "A ParetoValue is the inner object of a pareto analysis and contains\
        \ the id, name and count of an single entry"
      type: object
      properties:
        count:
          format: int32
          description: The Count of the ParetoValue
          type: integer
        description:
          description: The Description of the ParetoValue (for example FailureDescription)
          type: string
        id:
          description: The ID of the ParetoValue (for example FailureId)
          type: string
        name:
          description: The Name of the ParetoValue (for example FailureName)
          type: string
        payload:
          description: Additional Payload for the ParetoValue (for example FailureType)
          type: string
      readOnly: true
    WorkorderSerialunitBookingProductionProgress:
      description: WorkorderProductionProgress contains the amount of produced Units
        so far base on the highest Workstepnumber and workstepLocation
      type: object
      properties:
        amountProducedUnits:
          format: int64
          description: Amount of produced Units
          type: integer
        maxWorkstepLocation:
          description: Max WorkstepLocation
          type: string
        maxWorkstepNumber:
          format: int64
          description: Max WorkstepNumber
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrgUnit
      readOnly: true
    Type:
      enum:
      - INTERNATIONAL
      - METRIC
      - NONE
      type: string
    Dimensionless:
      description: Dimension Dimensionless
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    OrganizationUnitCondition:
      description: Condition of a Machine at a time
      required:
      - organizationUnitId
      - conditionId
      - bookDate
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Start-Time of the station-condition
            default: current system date&time
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        payload:
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift assigned to booking organizationUnit at server-time
              on creation of this condition
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GecOrganizationUnitType:
      description: Fixed defined OrganizationUnitTypes
      type: object
    SmtEquipmentUsageData:
      description: Object for Usage of a SmtEquipment
      type: object
      properties:
        qty:
          format: int64
          description: Qty of the SmtEquipment
          type: integer
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
      deprecated: true
    WorkorderQuantityAdjustmentMode:
      description: QuantityAjustment for the workorder quantity. Defines whether the
        workorder quantity should be increased in special cases (e.g. increase by
        Scrap-Booking)
      enum:
      - NONE
      - ADJUST_SCRAP
      type: string
    LockRestrictionDefinition:
      description: Provide all lockRestrictions for an entityType
      type: object
      properties:
        entityType:
          description: "name of the SMom entityType the restrictiona are usable for,\
            \ e.g. Serialunit"
          type: string
        restrictions:
          description: name and description of the lockRestriction
          type: array
          items:
            $ref: '#/components/schemas/NameDescription'
    WorkorderClusterBase:
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        finished:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plannedEndDate:
          $ref: '#/components/schemas/OffsetDateTime'
        plannedStartDate:
          $ref: '#/components/schemas/OffsetDateTime'
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        processState:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterProcessState'
          - readOnly: true
        quantity:
          format: double
          minimum: 1
          type: number
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        started:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FillMode:
      description: "If minimal length of a IdGeneratorComponent is not reached, fill\
        \ according to this mode"
      enum:
      - RIGHT
      - LEFT
      - BOTH_START_RIGHT
      - BOTH_START_LEFT
      type: string
    JdbcDriverInfo:
      description: Infos fOR JDBC-Driver
      type: object
      properties:
        jdbcDriver:
          description: Driver toString
          type: string
        jdbcDriverMajorVersion:
          format: int32
          description: Driver Major Version
          type: integer
        jdbcDriverMinorVersion:
          format: int32
          description: Driver Minor Version
          type: integer
      readOnly: true
    OrganizationUnitMessageDTO:
      description: OrganizationUnitMessage booking for a OrganizationUnit
      required:
      - organizationUnitName
      - messageName
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        closedInfo:
          description: Additional close message
          type: string
        closedSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Message is open since this date. If given, the message will\
              \ be closed (must be after or equal to confirmedSince)."
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Message confirm-time this date. If given, the message will\
              \ be confirmed (must be after or equal to openSince)."
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message(optional). Can be set if available otherwise
              use MessageName instead
        messageName:
          description: Name of the Message that should be booked
          type: string
        openSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Message is open since this date. If given, the message will\
              \ be opened."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit(optional). Can be set if available
              otherwise use OrganizationUnitName instead
        organizationUnitName:
          description: Name of the station that performes the booking
          type: string
        responsibleUser:
          description: Name of the user that is responsible
          type: string
    OrganizationUnitType:
      description: "Types of OrganizationUnits. There are predefinied Types, the Customer\
        \ can add additional Types"
      required:
      - name
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description of the OrganizationUnit Type
          type: string
        name:
          description: Name of the OrganizationUnit Type
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the referencing Plant
        rank:
          format: int32
          description: Unique Rank to structure different OrganizationUnit Types
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        systemDefined:
          description: "TRUE, when the Type is an System Type, System Types must not\
            \ be deleted.<BR />FALSE, if the Type is a user defined Type."
          type: boolean
          readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    HandlingUnitView:
      description: View of a handlingUnit with it's definition and assigned serialUnits
      type: object
      properties:
        handlingUnit:
          $ref: '#/components/schemas/HandlingUnit'
        handlingUnitDefinition:
          $ref: '#/components/schemas/HandlingUnitDefinition'
        serialunits:
          type: array
          items:
            $ref: '#/components/schemas/Serialunit'
      readOnly: true
    OrganizationUnitMeasurementValueMaterialBin:
      description: MaterialBin Mesurementvalue booked by an OrganizationUnit
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: BookDate of the Measurement
        endDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: EndDate of the Filter for OrganizationUnitMeasurementValue
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin for which the Booking was performed.
        materialBinName:
          description: Name of the MaterialBin for which the Booking was performed.
          type: string
        maximum:
          format: double
          description: Max Value of the Measurement
          type: number
        measurementName:
          description: Name of the Measurement
          type: string
        minimum:
          format: double
          description: Min Value of the Measurement
          type: number
        nominal:
          format: double
          description: Nominal Value of the Measurement
          type: number
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        startDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: StartDate of the Filter for OrganizationUnitMeasurementValue
        tolerance:
          format: double
          description: Tolerance Value of the Measurement
          type: number
        unit:
          description: Unit
          type: string
        value:
          format: double
          description: Value of the Measurement
          type: number
      readOnly: true
    Unit:
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkstepState:
      description: State of the OrganizationUnit in that workstep
      enum:
      - STARTED
      - PAUSED
      - FINISHED
      - READY
      - NOT_READY
      type: string
    SerialunitGroupedBookingView:
      type: object
      properties:
        amountBookingTotal:
          format: int32
          description: Amount of total bookings used to group the Data
          type: integer
        amountSerialunits:
          format: int32
          description: Amount of distinct Serialunits in the grouped Data
          type: integer
          readOnly: true
        bookingType:
          allOf:
          - $ref: '#/components/schemas/BookingType'
          - description: "BookingType: SERIALUNIT, WORKORDER_WORKSTEP"
        maxBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Maximum Bookdate of the grouped Data
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Minimum Bookdate of the grouped Data
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has done the booking
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has done the booking
        organizationUnitName:
          description: Name of the OrganizationUnit which has done the booking
          type: string
        partDescription:
          description: Description of the Part of the Booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of the Part of the Booking
        partName:
          description: Name of the Part of the Booking
          type: string
        quantityFail:
          format: double
          description: Amount of bookings with state FAIL
          type: number
        quantityFirstPass:
          format: double
          description: Amount of First PASS bookings
          type: number
        quantityInProcess:
          format: double
          description: Amount of bookings with state IN_PROCESS
          type: number
        quantityPass:
          format: double
          description: Amount of bookings with state PASS
          type: number
        quantityScrap:
          format: double
          description: Amount of bookings with state SCRAP
          type: number
        sumCycleTime:
          format: int64
          description: Sum Cycle Time
          type: integer
        sumSetupTime:
          format: int64
          description: Sum Setup Time
          type: integer
        workorderDescription:
          description: Description of the Workorder the Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Booking belongs to
        workorderName:
          description: Name of the Workorder the Booking belongs to
          type: string
        workorderWorkstepDescription:
          description: Description of the WorkorderWorkstep the Booking belongs to
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the Booking belongs to
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep the Booking belongs to
          type: string
    BookingPerShift:
      description: "Consolidated bookings for a OrganizationUnit, Workorder and Workstep\
        \ per shift"
      required:
      - fromDate
      - workorderWorkstepId
      - organizationUnitId
      - toDate
      - bookDate
      - organizationUnitName
      - workorderId
      - workorderName
      - workorderWorkstepName
      - workorderWorkstepPosition
      - cycleTime
      - setupTime
      - plantId
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Booking OffsetDateTime
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        cycleTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Cycletime for this Booking
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
            readOnly: true
        fromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation From
        id:
          $ref: '#/components/schemas/BookingPerShiftPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
        organizationUnitName:
          description: OrganizationUnit name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
        quantityBookings:
          format: int32
          description: total number of bookings
          type: integer
          readOnly: true
        quantityFail:
          format: double
          description: Sum FAIL-Quantity
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Sum FIRST-PASS-Quantity
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Sum InProcess-Quantity
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Sum PASS-Quantity
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Sum SCRAP-Quantity
          type: number
          readOnly: true
        setupTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Setuptime for this Booking
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId for this Booking
            nullable: false
        shiftName:
          description: ShiftName for this Booking
          type: string
          nullable: false
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation To
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
          readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
        workorderName:
          description: Workorder name
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep for this Booking
          type: string
        workorderWorkstepPosition:
          format: int64
          description: Position of the WorkorderWorkstep for this Booking
          type: integer
      readOnly: true
    OrganizationUnitMeasurement:
      description: Mesurement booked by an OrganizationUnit
      type: object
      properties:
        amountBookings:
          format: int64
          description: Amnount  of Bookings
          type: integer
        endDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: EndDate of the Filter for OrganizationUnitMeasurement
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: First BookDate of the Measurement
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Last BookDate of the Measurement
        maxMaximum:
          format: double
          description: Max Value of the Maximum
          type: number
        maxMaximumTextual:
          description: Max Value of the Maximum
          type: string
        maxTolerance:
          format: double
          description: Max Value of the Tolerance
          type: number
        maxToleranceTextual:
          description: Max Value of the Tolerance
          type: string
        measurementName:
          description: Name of the Measurement
          type: string
        minMinimum:
          format: double
          description: Min Value of the Minimum
          type: number
        minMinimumTextual:
          description: Min Value of the Minimum
          type: string
        minNominal:
          format: double
          description: Min Value of the Nominal
          type: number
        minNominalTextual:
          description: Min Value of the Nominal
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        startDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: StartDate of the Filter for OrganizationUnitMeasurement
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Workorder, only set if WorkorderId is used in\
              \ Filter"
      readOnly: true
    MaterialBinDTO:
      description: 'MaterialBin data including Part Data '
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer for whom the materialbin is needed
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        measurements:
          description: "Materialbin measurements<BR>Measurements are transaction data\
            \ of the materialBin, so when an materialBin is imported again, there\
            \ is no delta-comparition for measurements, each time a MaterialBin with\
            \ measurement values is imported, the measurements are saved"
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementDTO'
        name:
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        sections:
          description: "Materialbin sections<BR>Sections are master data of a materialBin,\
            \ so when an materialBin is imported again, there is a delta-comparision\
            \ of the sections based on the name of the sections<BR> * Sections with\
            \ a new name are created<BR> * Sections with a existing name are verified\
            \ and chnages are updated<BR> * Sections with a deleteRequest are deleted<BR>\
            \ * Existing sections that are not part of the imported sections are not\
            \ modified<BR> * If no sections to import are given, no change on existing\
            \ sections is done<BR>Important: the Section must not overlap with other\
            \ sections, this would cause an failure"
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSectionDTO'
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    WorkorderState:
      description: Fixed defined states of a workorder-process
      enum:
      - NEW
      - STARTED
      - FINISHED
      type: string
    MaterialBinMeasurementBookingNumeric:
      description: Numeric measurement for a materialBin. A Measurement is unique
        for it's name and bookdate
      required:
      - name
      - measurementUnit
      - bookDate
      - materialBinId
      - sourceType
      - partId
      - value
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        calculatedState:
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic (Testplan) for this Booking
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        lowerActionLimit:
          format: double
          description: Lower action limit value
          type: number
        lowerScrapLimit:
          format: double
          description: Lower scrap limit value
          type: number
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin with this ID
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          type: string
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          type: string
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement done by a organizationUnit with this ID
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin of part with this ID
        sourceType:
          $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        state:
          description: State of the measured characteristic
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard the measurement references to
        testboardName:
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        toleranceMaximum:
          format: double
          description: Tolerance maximum value
          type: number
        toleranceMinimum:
          format: double
          description: Tolerance minimum value
          type: number
        upperActionLimit:
          format: double
          description: Upper action limit value
          type: number
        upperScrapLimit:
          format: double
          description: Upper scrap limit value
          type: number
        value:
          format: double
          description: Value
          type: number
    OrganizationUnitConditionHistory:
      description: History of conditions of a Machine
      required:
      - organizationUnitId
      - conditionId
      - bookDate
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Start-Time of the station-condition
            default: current system date&time
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        payload:
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift assigned to booking organizationUnit at server-time
              on creation of this condition
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitWorkorderActivationHistory:
      description: Removed activation of an organizationUnit for a Workorder at a
        Workstep
      required:
      - organizationUnitId
      - workorderId
      - workorderWorkstepId
      - workorderWorkstepOrganizationUnitId
      - topOrganizationUnitId
      - userName
      - created
      - stamp
      - deactivationStamp
      - deactivationUserName
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        deactivationStamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Stamp when the Activation was removed
        deactivationUserName:
          description: UserIdent of the User who has done the activation
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that is activated for the workorder
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        stateBeforeActivation:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the WorkorderWorkstepOrganizationUnit before it
              was activated
            default: READY
        topOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit that was used for activation,\
              \ may be organizationUnit itself or a parent of the organizationUnit"
        userName:
          description: Ident of the User who has done the activation
          type: string
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the organizationunit is activated for
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the organizationunit is activated
              for
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of a WorkorderWorkstepOrganizationUnit, the entiy that\
              \ builds the reference between the OrganizationUnit and the Workorderworkstep\
              \ based on the Workcenter"
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    SerialunitMergeHistoryChildView:
      description: A MergeHistory of a (Child)-Serialunit merged into a ParentSerialunit
        with the (Parent)-Workorder and (Parent)-Part wrapped as SerialunitView
      type: object
      properties:
        parentSerialunit:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: The Parent-Serialnumber the Child is/was merged into
        serialunitMerge:
          allOf:
          - $ref: '#/components/schemas/MergeSerialunitHistory'
          - description: The MergeHistory for one Merge
      readOnly: true
    Order:
      enum:
      - DESC
      - ASC
      type: string
    GroupBy:
      enum:
      - HOUR
      - DAY
      type: string
    EquipmentMaintenanceProtocol:
      description: Protocol of maintenances for a Equipment
      required:
      - maintainableId
      - maintenanceName
      - maintenanceStart
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        endUserName:
          type: string
        failuresTotal:
          format: int32
          type: integer
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        maintainableId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: id of the equipment
        maintenanceComment:
          type: string
        maintenanceEnd:
          $ref: '#/components/schemas/OffsetDateTime'
        maintenanceName:
          $ref: '#/components/schemas/MaintenanceName'
        maintenanceStart:
          $ref: '#/components/schemas/OffsetDateTime'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        startUserName:
          type: string
        usagesTotal:
          format: int32
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitCurrentConditionView:
      description: OrganizationUnitCurrentConditionView contains OrganizationUnitConditionMessage
        and all childOrganizationUnits
      type: object
      properties:
        childOrganizationUnits:
          description: List of Child OrganizationUnits of that OrganizationUnit
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUnitCurrentConditionView'
          readOnly: true
        organizationUnitConditionMessage:
          $ref: '#/components/schemas/OrganizationUnitConditionMessage'
      readOnly: true
    FinalMaintenanceInterval:
      description: Final Maintenance Interval
      type: object
      properties:
        afterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour.
              If current usage-duration exceeds this value, a maintenance should be done.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval start is creation date.
              End is current system date.
        afterFailures:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        afterUsages:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        warnAfterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour. May be given, only if afterDuration is given, too.
              If current usage-duration exceeds this value, a maintenance should be done soon.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval: start is creation date.
              End is current system date.
        warnAfterFailures:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterFailures is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
        warnAfterUsages:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterUsages is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
    SerialunitHierarchyState:
      description: "State of the SerialunitHierarchy: MERGES, UNMERGED"
      enum:
      - MERGE
      - UNMERGE
      type: string
    ElectricCharge:
      description: Dimension ElectricCharge
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    SerialunitReservedNumberView:
      description: View of reserved numbers of a serialunit
      type: object
      properties:
        reservedNumbers:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitReservedNumber'
        serialunit:
          $ref: '#/components/schemas/Serialunit'
      readOnly: true
    IdGenerator:
      description: "(Only certain fields are updatable when released, see field's\
        \ description)"
      required:
      - counterBase
      - idGeneratorTypeId
      type: object
      properties:
        counterBase:
          allOf:
          - $ref: '#/components/schemas/CounterBase'
          - description: Counter of this IdGenerator will be attachted to MasterData
              of this type
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of IdGenerator
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    DurationPerDay:
      description: Consolidated durations for a OrganizationUnit per day
      required:
      - fromDate
      - toDate
      - bookDate
      - organizationUnitId
      - organizationUnitName
      - plantId
      - lastLevel4
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: date of last booking (might be before the fromDate)
            example: 1970-01-01T00:00:00.0Z
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
        fromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation From
            example: 1970-01-01T00:00:00.0Z
        id:
          $ref: '#/components/schemas/DurationPerDayPk'
        lastLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: Last booked MDC-Level2 according to SEMI E 10
        lastLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: Last booked MDC-Level3 according to SEMI E 10
        lastLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Last booked MDC-Level4 according to SEMI E 10
        level2Durations:
          description: Summarized duration and quantity of conditions for a Level2
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level3Durations:
          description: Summarized duration and quantity of conditions for a Level3
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level4Durations:
          description: Summarized duration and quantity of conditions for a Level4
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
        organizationUnitName:
          description: OrganizationUnit name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation To
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
      readOnly: true
    WorkorderWorkstepEquipmentAlternativeView:
      required:
      - quantity
      - partId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipment:
          $ref: '#/components/schemas/Equipment'
        equipmentDefinitionView:
          $ref: '#/components/schemas/EquipmentDefinitionView'
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of exact one dedicated equipment, if null 'any' of the\
              \ EquipmentDefintion defined by partId suffices."
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the equipmentDefinition.
        quantity:
          format: int32
          description: "Quantity will be evaluated, if not one exact, dedicated equipment\
            \ is defined but a equipmentDefinition."
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: 100
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipment:
      description: "SmtEquipment used in SMT for Nozzle, Feeder, Head, ..."
      required:
      - partId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: last BookDate /usageDate of this SmtEquipment
        misspicks:
          format: int64
          description: MissPicks done by this SmtEquipment
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PartId of the SmtEquipment-Part
        payload:
          description: Payload
          type: string
        picks:
          format: int64
          description: Picks done by this SmtEquipment
          type: integer
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the StoragePlace. Is set when the MaterialBin is stored
              via Storage Service
        storagePlaceName:
          description: Name of the StoragePlace. Is set when the MaterialBin is stored
            via Storage Service
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: "Type of this SmtEquipment, see SmtEquipmentType"
            example: HEAD
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
      deprecated: true
    Level4Data:
      description: Additional infos to MDC-Level 4. Updates to a Level4Data will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        level4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Level4
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PlantId
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    PredictionRun:
      description: Prediction Run Data
      type: object
      properties:
        continuousRun:
          type: boolean
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        description:
          type: string
        filter:
          type: string
          example: "{ \"partId\":\"17\"}"
        finished:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        fromDate:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
          readOnly: true
        lastDataDay:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        name:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PlantId
            readOnly: true
        progress:
          type: string
          readOnly: true
        slice:
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        started:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        state:
          type: string
          readOnly: true
        toDate:
          $ref: '#/components/schemas/OffsetDateTime'
        topId:
          format: int64
          type: integer
          readOnly: true
        type:
          type: string
    ImportBulkRTOUnidentifiableSerialunitBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item without id
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    MaintenanceProtocolViewEquipmentEquipmentMaintenanceProtocol:
      type: object
      properties:
        maintainable:
          $ref: '#/components/schemas/Equipment'
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentMaintenanceProtocol'
    OrganizationUnit:
      description: "OrganizationUnit used in production (Only certain fields are updatable\
        \ when released, see field's description)"
      required:
      - state
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        lastBookDateProcess:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        lastBookDateSerialunit:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        lastBookDateWorkstep:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - readOnly: true
        latitude:
          format: double
          description: GEO-Location - Latitude
          type: number
        longitude:
          format: double
          description: GEO-Location - Longitude
          type: number
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        parentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "the id of the parent organizationUnit, e.g. the id of the\
              \ line for a station"
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        requiredSkills:
          description: Set of required skills to operate
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RequiredSkill'
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: "State of the OrganizationUnit (IN_PROCESS, RELEASED, ARCHIVED)<BR>IN_PROCESS\
              \ is only used in Masterdata, so we will only see: RELEASED and ARCHIVED\
              \ in this Service."
        type:
          description: "Type of the OrganizationUnit. TYPES:PLANT, LINE, STATION,\
            \ ..."
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        zoneId:
          description: Id of the TimeZone of the station. See API 'systeminfo/zoneids'
          type: string
          example: Europe/Berlin
    WorkorderHierarchy:
      description: WorkorderHierarchy contains the Workorder-Infos and quantity of
        merged Units from serial_unit_hierarchy
      type: object
      properties:
        partDescription:
          description: Part Description
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: partId
        partName:
          description: Part Name
          type: string
        serialUnitQuantity:
          format: int64
          description: Amount of merged Units
          type: integer
        workorderDescription:
          description: Workorder Description
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: workorderId
        workorderName:
          description: Workorder Name
          type: string
        workorderQuantity:
          format: double
          description: Total Quantity of workorder
          type: number
      readOnly: true
    BookingPerDay:
      description: "Consolidated bookings for a OrganizationUnit, Workorder and Workstep\
        \ per day"
      required:
      - fromDate
      - workorderWorkstepId
      - organizationUnitId
      - toDate
      - bookDate
      - organizationUnitName
      - workorderId
      - workorderName
      - workorderWorkstepName
      - workorderWorkstepPosition
      - cycleTime
      - setupTime
      - plantId
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Booking OffsetDateTime
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        cycleTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Cycletime for this Booking
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
            readOnly: true
        fromDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation From
        id:
          $ref: '#/components/schemas/BookingPerDayPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
        organizationUnitName:
          description: OrganizationUnit name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
        quantityBookings:
          format: int32
          description: total number of bookings
          type: integer
          readOnly: true
        quantityFail:
          format: double
          description: Sum FAIL-Quantity
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Sum FIRST-PASS-Quantity
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Sum InProcess-Quantity
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Sum PASS-Quantity
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Sum SCRAP-Quantity
          type: number
          readOnly: true
        setupTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Setuptime for this Booking
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        toDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Consolidation To
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
          readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
        workorderName:
          description: Workorder name
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep for this Booking
          type: string
        workorderWorkstepPosition:
          format: int64
          description: Position of the WorkorderWorkstep for this Booking
          type: integer
      readOnly: true
    ImportRTOWorkorderDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    MultipanelSerialunitHistory:
      description: History of combination and separation of serialunits to a multipanel
      required:
      - multipanelPosition
      - serialunitId
      - state
      type: object
      properties:
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: MultipanelId
        multipanelName:
          description: MultipanelName
          type: string
        multipanelPosition:
          description: MultipanelPosition
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialunitId
        stamp:
          $ref: '#/components/schemas/OffsetDateTime'
        state:
          $ref: '#/components/schemas/MultipanelState'
      readOnly: true
    ImportBulkRTOUnidentifiableProcessEquipmentBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item without id
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    ConnectionPoolConfig:
      type: object
      properties:
        acquisitionTimeout:
          $ref: '#/components/schemas/Duration'
        autoCommit:
          type: boolean
        flushOnClose:
          type: boolean
        idleValidationTimeout:
          $ref: '#/components/schemas/Duration'
        initialSQL:
          type: string
        initialSize:
          format: int32
          type: integer
        leakTimeout:
          $ref: '#/components/schemas/Duration'
        maxLifeTime:
          $ref: '#/components/schemas/Duration'
        maxSize:
          format: int32
          type: integer
        metricsEnabled:
          type: boolean
        minSize:
          format: int32
          type: integer
        poolName:
          type: string
        principal:
          type: string
        reapTimeout:
          $ref: '#/components/schemas/Duration'
        stamp:
          $ref: '#/components/schemas/OffsetDateTime'
        transactionRequirement:
          $ref: '#/components/schemas/TransactionRequirement'
        validationTimeout:
          $ref: '#/components/schemas/Duration'
    Temperature:
      description: Dimension Temperature
      required:
      - value
      - unit
      type: object
      properties:
        scale:
          allOf:
          - $ref: '#/components/schemas/Scale'
          - description: Must not be set if default
            default: ABSOLUTE
        unit:
          description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
            \ for valid unit-symbols."
          type: string
        value:
          type: number
    Category:
      description: "Categories for Downtimes. (Lower Bound Inclusive, Upper Bound\
        \ Exclusive)"
      enum:
      - GREATER_THAN_TEN_MINUTES
      - ONE_TO_TEN_MINUTES
      - THIRTY_SECONDS_TO_ONE_MINUTE
      - TEN_SECONDS_TO_THIRTY_SECONDS
      - ONE_SECOND_TO_TEN_SECONDS
      - LESS_THAN_ONE_SECOND
      type: string
      readOnly: true
    HandlingUnitDefinition:
      description: "(Only certain fields are updatable when released, see field's\
        \ description)"
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        singleVarietyRequired:
          description: Single Variety Required
          type: boolean
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    MasterDataComponent:
      description: "(Only certain fields are updatable when released, see field's\
        \ description)"
      required:
      - fillMode
      - fillWith
      - masterDataType
      - masterDataField
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        masterDataField:
          description: Field of masterdata (e.g. name)
          type: string
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of masterdata (e.g. PART)
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    Message:
      description: Defintion of a Message. Updates to a Message will be stored in
        an audit-trail.
      type: object
      properties:
        cause:
          description: Cause
          type: string
        consequence:
          description: Consequence
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        messageCategoryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Category
        messageClassId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Class
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        priority:
          format: int32
          description: Priority value
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepBookingDTO:
      description: WorkorderWorkstep booking for a workorder at a workstep for a station
      required:
      - organizationUnitName
      - workstepName
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "optional creation date of the bookings, if not given the\
              \ server date is used"
        bookInfo:
          description: "an optional information text for this booking. If length exceeds\
            \ 2000, it's trimmed."
          type: string
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration to build the amount for booking quantiy of this
              workstep
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        name:
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        quantityFail:
          format: double
          description: Fail quantity send with this booking
          type: number
        quantityFirstPass:
          format: double
          description: First Pass quantity send with this booking
          type: number
        quantityInProcess:
          format: double
          description: InProcess quantity send with this booking. Use InProcess only
            for long running process steps
          type: number
        quantityPass:
          format: double
          description: Pass quantity send with this booking
          type: number
        quantityScrap:
          format: double
          description: Scrap quantity send with this booking
          type: number
        setupList:
          description: List of SetupData with materialBins and the used smtEquipments
            for this booking
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepMaterialSetupDTO'
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Unit the quantities of booking are send with,\
              \ if not given the unit of the workorder is used"
        unitName:
          description: "Name of the Unit the quantities of booking are send with,\
            \ if not given the unbit of the workorder is used"
          type: string
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    ImportBulkRTOMultipanelSerialUnitBookingStateDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    OrganizationUnitSmall:
      description: Small Class OrganizationUnit
      type: object
      properties:
        description:
          description: Description of the OrganizationUnit
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        name:
          description: Name of the OrganizationUnit
          type: string
      readOnly: true
    WorkorderWorkstepBooking:
      description: WorkorderWorkstepBooking Entity. Single quantity booking of a station
        at a workstep of a workorder
      required:
      - workorderWorkstepId
      - bookDate
      - organizationUnitId
      - workorderId
      - created
      - workorderWorkstepOrganizationUnitId
      - setupTime
      - userName
      - hasEquipment
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Optional Bookdate for that booking (date given from the client
              or if not given the server date is used)
        bookInfo:
          description: an optional information text for this booking
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation date for the booking (Serverdate)
            readOnly: true
        cycleTime:
          format: int64
          description: cycletime in milliseconds to build the given amount of units
            in this workstep
          type: integer
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration to build the amount for booking quantiy of this
              workstep
        hasEquipment:
          description: Are EquipmentBookings existing for this Booking
          type: boolean
        hasMaterial:
          description: Are MaterialBookings existing for this Booking
          type: boolean
          readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the OrganizationUnit that created the booking '
        quantityFail:
          format: double
          description: Quantity of FAIL for this booking
          type: number
        quantityFailWorkstep:
          format: double
          description: Total Quantity FAIL for the workstep after this booking
          type: number
        quantityFirstPass:
          format: double
          description: Quantity of FIRST PASS Bookings for this booking
          type: number
        quantityFirstPassWorkstep:
          format: double
          description: Total Quantity FIRST PASS for the workstep after this booking
          type: number
        quantityInProcess:
          format: double
          description: "Quantity of InProcess Bookings for this booking, Use InProcess\
            \ only for long running process steps"
          type: number
        quantityInProcessWorkstep:
          format: double
          description: Total Quantity InProcess for the workstep after this booking
          type: number
        quantityPass:
          format: double
          description: Quantity of PASS Bookings for this booking
          type: number
        quantityPassWorkstep:
          format: double
          description: Total Quantity PASS for the workstep after this booking
          type: number
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings for this booking
          type: number
        quantityScrapWorkstep:
          format: double
          description: Total Quantity SCRAP for the workstep after this booking
          type: number
        setupTime:
          format: int64
          description: cycletime in milliseconds to setup the given amount of units
            in this workstep
          type: integer
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ShiftId for this Booking, can be null"
            nullable: true
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Unit the quantities of booking are send with,\
              \ if not given the unit of the workorder is used"
        userName:
          description: User who created the booking
          type: string
          readOnly: true
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderClusterPosition:
          description: "Id of the WorkorderCluster, can be null"
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the workorder the booking belongs to
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep that does the booking
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnit that does the
              booking
    GroupedBookingView:
      description: "Group the Serialunit or WorkorderWoerkstep - Bookings  for part,\
        \ OrganizationUnit and Workorder ang get the grouped quantity for PASS, FAIL,\
        \ SCRAP,IN_PROCESS for the given Filter"
      type: object
      properties:
        amountBookingTotal:
          format: int32
          description: Amount of total bookings used to group the Data
          type: integer
        bookingType:
          allOf:
          - $ref: '#/components/schemas/BookingType'
          - description: "BookingType: SERIALUNIT, WORKORDER_WORKSTEP"
        maxBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Maximum Bookdate of the grouped Data
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Minimum Bookdate of the grouped Data
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has done the booking
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has done the booking
        organizationUnitName:
          description: Name of the OrganizationUnit which has done the booking
          type: string
        partDescription:
          description: Description of the Part of the Booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of the Part of the Booking
        partName:
          description: Name of the Part of the Booking
          type: string
        quantityFail:
          format: double
          description: Amount of bookings with state FAIL
          type: number
        quantityFirstPass:
          format: double
          description: Amount of First PASS bookings
          type: number
        quantityInProcess:
          format: double
          description: Amount of bookings with state IN_PROCESS
          type: number
        quantityPass:
          format: double
          description: Amount of bookings with state PASS
          type: number
        quantityScrap:
          format: double
          description: Amount of bookings with state SCRAP
          type: number
        sumCycleTime:
          format: int64
          description: Sum Cycle Time
          type: integer
        sumSetupTime:
          format: int64
          description: Sum Setup Time
          type: integer
        workorderDescription:
          description: Description of the Workorder the Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Booking belongs to
        workorderName:
          description: Name of the Workorder the Booking belongs to
          type: string
        workorderWorkstepDescription:
          description: Description of the WorkorderWorkstep the Booking belongs to
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the Booking belongs to
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep the Booking belongs to
          type: string
      readOnly: true
    OrganizationUnitMessage:
      description: Message of an OrganizationUnit
      required:
      - organizationUnitId
      - messageId
      - openSince
      - itemId
      - openUser
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Message confirm-time
        confirmedUser:
          description: Name of the user that confirmed the message
          type: string
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        id:
          $ref: '#/components/schemas/OrganizationUnitMessagePK'
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
        messageState:
          allOf:
          - $ref: '#/components/schemas/MessageState'
          - description: State of the message
            readOnly: true
        openSince:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "Message open-time. May be set on creation-time of the message,\
              \ subsequent updates are forbidden!"
        openToConfirmDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and confirm
            readOnly: true
        openUser:
          description: Name of the user that opened the message
          type: string
          readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the plant
            readOnly: true
        responsibleUser:
          description: Name of the user that is responsible
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift during open-time
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GecFailureBase:
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
      readOnly: true
    MessageGroupView:
      description: MessageGroupView contains MessageGroup and their assigned Messages
      type: object
      properties:
        messageGroup:
          $ref: '#/components/schemas/MessageGroup'
        messageList:
          type: array
          items:
            $ref: '#/components/schemas/Message'
      readOnly: true
    WorkorderWorkstepEquipmentAlternative:
      description: Alternative to a equipment required at a workstep of a workorder
      required:
      - quantity
      - partId
      - usageProbability
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the part/equipmentDefinition of this equipment
        quantity:
          format: int32
          minimum: 1
          type: integer
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: 100
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FailureBookingView:
      description: "FailureBookingView is a Join over FailureBooking, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Book Date '
        failureAction:
          description: 'Failure Action '
          type: string
        failureBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Creation Date of the FailureBooking '
        failureBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the FailureBooking '
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: Optional Failure Comment during failure-upload
          type: string
        failureDescription:
          description: 'Failure Description '
          type: string
        failureId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Failure '
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        isPseudo:
          description: 'is Pseudo Failure '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        materialPartDescription:
          description: 'Description of Material-Part '
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Material-Part '
        materialPartName:
          description: 'Name of the Material-Part '
          type: string
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        organizationUnitName:
          description: 'Name of the OrganizationUnit '
          type: string
        partDescription:
          description: 'Description of the Product-Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Product-Part '
        partName:
          description: 'Name of the Product-Part '
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Serialunit '
        serialunitName:
          description: 'Serialunit Name '
          type: string
        serialunitPosition:
          description: 'Serialunit Position '
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Shift
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepNumber:
          description: 'WorkstepNumber '
          type: string
      readOnly: true
    ImportRTOSerialunitDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          description: Type of the Data to Import
          type: string
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OutputOverTime:
      description: Information about the Output per Minute for a OrgUnit
      type: object
      properties:
        targetMax:
          format: double
          description: TargetMax
          type: number
        targetMin:
          format: double
          description: TargetMin
          type: number
        values:
          description: List of the Date NumberPairs
          type: object
          items:
            $ref: '#/components/schemas/DateNumberPair'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder
      readOnly: true
    MaterialBinMeasurementBookingTextualView:
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Book Date
        calculatedState:
          description: Calculated
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the Measurement
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximum
          type: string
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          description: Minimum
          type: string
        name:
          description: Name
          type: string
        nominal:
          description: Nominal
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
        state:
          description: State
          type: string
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
    OrganizationUnitWorkerDeregistrationView:
      description: History of deregistration of Workers that was registered and then
        deregistred at a OrganizationUnit
      type: object
      properties:
        deregisterDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Deregistration date
        deregisterUserName:
          description: Username who has deregistered the Worker
          type: string
        isLineDeregistration:
          description: Was the deregistration done by a Line
          type: boolean
        isLineRegistration:
          description: Was the registration done by a Line
          type: boolean
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        registerDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Registration date
        registerUserName:
          description: Username who has registered the Worker
          type: string
        workerDescription:
          description: Description of the worker that was registered at the station
          type: string
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the worker that was registered at the station
        workerName:
          description: Name of the worker that was registered at the station
          type: string
      readOnly: true
    UUIdentifiableObject:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
    MaterialBinUsageData:
      description: Object for Usage of a MaterialBin
      type: object
      properties:
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        qty:
          format: int64
          description: Qty/Count of the MaterialBin
          type: integer
    OrganizationUnitProductionHistoryMeanCycleTime:
      type: object
      properties:
        amount:
          format: int32
          description: Amount of Bookings
          type: integer
        calculatedCycleTime:
          format: double
          description: Calculated CycleTime
          type: number
        endBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: End Bookdate
        meanCycleTime:
          format: double
          description: Mean CycleTime
          type: number
        meanUnitsPerMillis:
          format: double
          description: Mean Units per Millisecond
          type: number
        startBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Start Bookdate
        unitsPerMillis:
          format: double
          description: Units per Millisecond
          type: number
      readOnly: true
    SerialunitHistoryView:
      type: object
      properties:
        mergeSerialunitHistoryList:
          description: List of MergeSerialunitHistory of this Serialunit.<BR>In which
            ParentSerialunit is the Serialunit currently merged in.<BR>In which ParentSerialunit
            was the Serialunit merged in but later unmerged from
          type: array
          items:
            $ref: '#/components/schemas/MergeSerialunitHistory'
          readOnly: true
        serialunitBookingList:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBooking'
          readOnly: true
        serialunitView:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: SerialUnitView contains the Serialnuber the Workorder and
              the Part
            readOnly: true
    CounterType:
      description: |
        CounterType
         * DECIMAL: Decimal counter (base 10)
         * HEXADECIMAL: Hexa-Decimal counter (base 16)
         * BASE32_RFC4684: Base 32 counter letters (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V)
         * BASE32_IJQR: Base-32 counter without letters I, J, Q, R (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,K,L,M,N,O,P,S,T,U,V,W,X,Y,Z)
         * BASE32_IOXZ: Base-32 counter without letters I, O, X, Z (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,Y)
      enum:
      - DECIMAL
      - HEXADECIMAL
      - BASE32_RFC4684
      - BASE32_IJQR
      - BASE32_IOXZ
      type: string
    FailureBookingViewGrouped:
      description: "FailureBookingViewGrouped is FailureBookingView grouped by Station,\
        \ Part and Location"
      type: object
      properties:
        bookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Book Date '
        failureAction:
          description: 'Failure Action '
          type: string
        failureBookingCreated:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Creation Date of the FailureBooking '
        failureBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the FailureBooking '
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: Optional Failure Comment during failure-upload
          type: string
        failureDescription:
          description: 'Failure Description '
          type: string
        failureId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Failure '
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        firstBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'First Book Date '
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First SerialunitId '
        firstSerialunitName:
          description: 'First SerialunitName '
          type: string
        isPseudo:
          description: 'is Pseudo Failure '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: 'Last Book Date '
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last SerialunitId '
        lastSerialunitName:
          description: 'Last SerialunitName '
          type: string
        location:
          description: 'Location '
          type: string
        locationList:
          type: array
          items:
            type: string
        materialPartDescription:
          description: 'Description of Material-Part '
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Material-Part '
        materialPartName:
          description: 'Name of the Material-Part '
          type: string
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        organizationUnitName:
          description: 'Name of the OrganizationUnit '
          type: string
        partDescription:
          description: 'Description of the Product-Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Product-Part '
        partName:
          description: 'Name of the Product-Part '
          type: string
        productList:
          type: array
          items:
            $ref: '#/components/schemas/PartSmall'
        qtyBookings:
          format: int32
          description: 'Amount of Bookings for Group Key '
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Serialunit '
        serialunitName:
          description: 'Serialunit Name '
          type: string
        serialunitPosition:
          description: 'Serialunit Position '
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Shift
        stationList:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUnitSmall'
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepNumber:
          description: 'WorkstepNumber '
          type: string
      readOnly: true
    CounterComponent:
      description: "Numerical counter as a part of an ID (Only certain fields are\
        \ updatable when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - incrementBy
      - start
      - max
      - counterType
      type: object
      properties:
        counterType:
          allOf:
          - $ref: '#/components/schemas/CounterType'
          - description: Counter-Type of the counter
            default: DECIMAL
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        incrementBy:
          description: Increment counter by this value for each new ID
          default: "1"
          type: string
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        max:
          description: Maximal value of the counter
          default: "2147483647"
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        start:
          description: Start of the counter
          default: "0"
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    ExternalObject:
      description: External Object Identified via ExternalIdf
      type: object
      properties:
        externalId:
          description: The externalId of the Object
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID in SmartMOM-Suite of the Object
        name:
          description: Name in SmartMOM-Suite of the Object
          type: string
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the ExternalId
        type:
          description: The Type of the Object (for example Serialunit)
          type: string
      readOnly: true
    ImportBulkRTOWorkorderDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          description: List of all Import Results
          type: array
          items:
            description: ImportResultTransferObject(RTO) Structure containing the
              result of the Import of one Item
            type: object
            properties:
              type:
                description: Type of the Data to Import
                type: string
              startTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was started
              endTime:
                allOf:
                - $ref: '#/components/schemas/OffsetDateTime'
                - description: The time when the import was finished
              name:
                description: Name of the Item that should be Imported
                type: string
              failureItems:
                description: GecFailures
                type: array
                items:
                  $ref: '#/components/schemas/GecFailure'
              warnItems:
                description: List ofGecWarnings
                type: array
                items:
                  $ref: '#/components/schemas/GecWarning'
              message:
                description: "Additional info regarding the import, e.g. may be used\
                  \ to list the updated fields"
                type: string
              plantId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: "Id of the plant, the import was done for."
              state:
                allOf:
                - $ref: '#/components/schemas/ImportProcessState'
                - description: Processing State of the Import Item
              id:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: Id is filled with the UUID of the created or already
                    existing Item
            readOnly: true
          nullable: false
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
    Scale:
      enum:
      - ABSOLUTE
      - RELATIVE
      type: string
    OrganizationUnitMaterialBinSetup:
      description: Updates to a OrganizationUnitMaterialBinSetup will be stored in
        an audit-trail.
      required:
      - materialBinId
      - organizationUnitId
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        materialBinId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ProcurementType:
      description: Procurement Type of a part
      enum:
      - INHOUSE
      - EXTERNAL
      type: string
    ConditionGroup:
      description: Group of a Machine Data Conditions. A Condition can (but not has
        to be) a member of a group. Updates to a ConditionGroup will be stored in
        an audit-trail.
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    Contact:
      type: object
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    Workorder:
      description: "Workorder (Only certain fields are updatable when released, see\
        \ field's description). Updates to a Workorder will be stored in an audit-trail."
      required:
      - numberOfBoards
      - type
      - partId
      - processState
      - lastWorkstepId
      - firstWorkstepId
      - unitId
      type: object
      properties:
        autoFinishComment:
          description: "Finish Comment, is set when the workorder is automatically\
            \ set to finished, based on the FINISH_MODE (Updatable when released)"
          type: string
          readOnly: true
        bomErpVersion:
          type: string
        bomName:
          description: "On release of the workorder: If no bomItems defined for this\
            \ workorder, the bom with given name an erpVersion will be fetched from\
            \ masterdata and it's definition copied."
          type: string
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the CustomerContact
        deliveryDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Delivery date of the Workorder (Updatable when released)
        description:
          description: Description (Updatable when released)
          type: string
        endDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "EndDate of the Workorder, is implicit set when a workorder\
              \ is set to finished (Updatable when released)"
            readOnly: true
        erpState:
          $ref: '#/components/schemas/WorkorderErpState'
        finishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        firstWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the first mandatory workstep in the workorder. May
              be null if there are no mandatory worksteps. Is set internally. (Updatable
              when released)
            readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        lastBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of the last booking done for the workorder
            readOnly: true
        lastWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the last mandatory workstep in the workorder. May be
              null if there are no mandatory worksteps. Is set internally. (Updatable
              when released)
            readOnly: true
        locked:
          description: "When true, Workorder is locked (Updatable when released)"
          type: boolean
        masterBomId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterBom
        masterWorkplanId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterWorkplan
        minBookDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Min BookDate of the Workorder. Null if no booking has been
              done so far.
            readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        numberOfBoards:
          format: int32
          description: Number of Units that are produced in one cycle (e.g. PCB with
            4 Positions)
          minimum: 1
          type: integer
        orderSequenceNumber:
          format: int32
          description: Order sequence number of the workorder (Updatable when released)
          type: integer
        parentWorkorderName:
          description: Name of parent workorder (Updatable when released)
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: |
              ID of the Product-Part that should be build with that Workorder.
              Corresponding part must not be in state IN_PROCESS
        payload:
          description: Payload (Updatable when released)
          type: string
        plannedDeliveryDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: planned delivery-date of the Workorder (Updatable when released)
        plannedEndDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Planned end-date of the Workorder (Updatable when released)
        plannedStartDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Planned start-date of the Workorder (Updatable when released)
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        prevProcessState:
          allOf:
          - $ref: '#/components/schemas/WorkorderState'
          - description: previous process state (Updatable when released)
            readOnly: true
        priorityCode:
          description: Priority of the workorder (Updatable when released)
          type: string
        processState:
          $ref: '#/components/schemas/WorkorderState'
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the ProducerContact
        productionController:
          description: Production Controller (Updatable when released)
          type: string
        purchaseOrderNumber:
          description: Purchase Order Number (Updatable when released)
          type: string
        quantity:
          format: double
          description: Workorder Quantity (Updatable when released)
          type: number
        quantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        quantityErp:
          format: double
          description: Inital Workorder Quantity requested from the ERP-System
          type: number
        quantityFinished:
          format: double
          description: Total finished quantity booked at the last mandatory Workstep
          type: number
          readOnly: true
        quantityMax:
          format: double
          description: Calculated maximum quantity of the workorder based on quantity
            and overbookPercentage used in finish the workorder (Updatable when released)
          type: number
          readOnly: true
        quantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished (Updatable when released)
          type: integer
        quantityScrap:
          format: double
          description: Total scrapped quantity booked at any Workstep
          type: number
          readOnly: true
        quantityScrapAdjust:
          format: double
          description: Scrap Quantity that was used to increased the workorder quantity
            based on Scrap Adjust setting (Updatable when released)
          type: number
        quantityStarted:
          format: double
          description: Total started quantity booked at the first mandatory Workstep
          type: number
          readOnly: true
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            readOnly: true
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change (Updatable when released)
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        startDate:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: "StartDate of the Workorder, is implicit set when a workorder\
              \ is set to started (Updatable when released)"
            readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SupplierContact
        type:
          $ref: '#/components/schemas/WorkorderType'
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: UnitId of the workorder
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        workplanErpVersion:
          type: string
        workplanName:
          description: "On release of the workorder: If no worksteps defined for this\
            \ workorder, the workplan with given name an erpVersion will be fetched\
            \ from masterdata and it's definition copied."
          type: string
    FirstLastOrganizationUnitBooking:
      type: object
      properties:
        firstBooking:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Creation Date of the OrganizationUnit-Booking
        lastBooking:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Stamp of the OrganizationUnit-Booking
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
    MultipanelDTO:
      description: 'Multipanel data '
      required:
      - multipanelSerialunits
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Multipanel (UUID), is set from the server"
            readOnly: true
        multiPanelName:
          description: Name of the Multipanel. Can be null
          type: string
        multipanelSerialunits:
          description: List of SerialUnits that should be created and assigned to
            the Multipanel
          type: array
          items:
            $ref: '#/components/schemas/MultipanelSerialunitDTO'
        name:
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
    WorkorderHighestBookedWorkstep:
      description: "WorkorderWorkstepHighestBooked contains the highest booked workstep\
        \ (PASS-bookings) for a workorder, including the booking organizationUnits\
        \ with there quantities"
      type: object
      properties:
        bookedOrganizationUnitList:
          description: List of WorkorderWorkstepOrganizationUnit that has done the
            bookings in the highest booked workstep position
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the workorder
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Highest booked workstep position in this workorder
      readOnly: true
    RequiredSkill:
      description: Skill required to perform a task
      required:
      - skillId
      type: object
      properties:
        alternative:
          allOf:
          - $ref: '#/components/schemas/RequiredSkill'
          - description: Alternative skill
        numberOfUsers:
          format: int32
          description: Number of users required to perform a task.
          minimum: 1
          type: integer
        skillId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Unique identifier of a required skill
    HandlingUnit:
      description: HandlingUnit Entity. Updates to a HandlingUnit will be stored in
        an audit-trail.
      required:
      - handlingUnitDefinitionId
      type: object
      properties:
        area:
          description: Dimension Area
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        created:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of creation
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        density:
          description: Dimension Density
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        description:
          description: Description
          type: string
        handlingUnitDefinitionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Reference to the HandlingUnitDefinition
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        height:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        length:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        singleVarietyRequired:
          description: Single Variety Required
          type: boolean
        stamp:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: Date of last change
            readOnly: true
            example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the StoragePlace. Is set when the Object is stored
              via Storage Service
        storagePlaceName:
          description: Name of the StoragePlace. Is set when the Object is stored
            via Storage Service
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        volume:
          description: Dimension Volume
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
          readOnly: true
        weight:
          description: must be greater than or equal to zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
        width:
          description: must be greater than zero
          required:
          - value
          - unit
          type: object
          properties:
            value:
              type: number
            unit:
              description: "Symbol of a unit. See API /resources/gecunits/dimensions/{dimension}/units\
                \ for valid unit-symbols."
              type: string
            scale:
              allOf:
              - $ref: '#/components/schemas/Scale'
              - description: Must not be set if default
                default: ABSOLUTE
    SerialunitMergeView:
      type: object
      properties:
        parentSerialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: 'The Parent-Serialnumber that has merged (Child)-Serialunits '
            readOnly: true
        serialunitViewList:
          description: List of (Child)SerialunitViews (Serialunit/Workorder/Part)
            that are merged into this ParentSerialunit
          type: array
          items:
            $ref: '#/components/schemas/SerialunitView'
          readOnly: true
    ImportBulkRTO:
      description: ImportResultTransferObject(RTO) of an Bulk Import for an ImportType
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was finished
        importResults:
          type: array
          items:
            $ref: '#/components/schemas/ImportRTOBase'
        startTime:
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          - description: The time when the import was started
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          description: Type of the Data to Import
          type: string
      readOnly: true
    EquipmentDefinitionView:
      type: object
      properties:
        equipmentDefinition:
          $ref: '#/components/schemas/EquipmentDefinition'
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        part:
          $ref: '#/components/schemas/Part'
    WorkorderWorkstepBomItemAlternativeView:
      type: object
      properties:
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part Object used in WorkorderWorkstepBomItem (Material)
            readOnly: true
        unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          - description: Unit Object used in WorkorderWorkstepBomItem
            readOnly: true
        workorderWorkstepBomItemAlternative:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternative'
          - description: Workorder Workstep Bom Item Alternative
            readOnly: true
    WorkorderWorkstepMaterialSetupDTO:
      description: "Setup data for a given SetupPosition with the materialBin setup\
        \ on this setupPosition, contains also the involved (BOM)-Location(s) and\
        \ the quantity consumed of the materialbin.<BR>When MaterialBin-FailurePareto\
        \ based on the (BOM)-Location should be used, each (BOM)-Location has to be\
        \ passed separately."
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          $ref: '#/components/schemas/OffsetDateTime'
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer for whom the materialbin is needed
        externalId:
          description: External Id. Use to Identify the MaterialBin from an External
            System. If not set during Import a External-ID is generated.
          type: string
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: "End-Position in the materialBin used for this booking (valid\
            \ for sequential MaterialBins, see MaterialBinTyp and MaterialBinItem\
            \ from/to)"
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: "Start-Position in the materialBin used for this booking (valid\
            \ for sequential MaterialBins, see MaterialBinTyp and MaterialBinItem\
            \ from/to)"
          type: number
        materialChargeCustomerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Customer of the materialcharge
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeExternalId:
          description: External Id. Use to Identify the MaterialCharge from an External
            System. If not set during Import a External-ID is generated.
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        materialChargeOriginator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the MaterialChargeExternalId. Is set to DPS
              if generated by SMOM.
        materialChargeSupplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialcharge
        originator:
          allOf:
          - $ref: '#/components/schemas/Originator'
          - description: Originator of the externalId. Is set to DPS if generated
              by SMOM.
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    ChronoUnit:
      enum:
      - NANOS
      - MICROS
      - MILLIS
      - SECONDS
      - MINUTES
      - HOURS
      - HALF_DAYS
      - DAYS
      - WEEKS
      - MONTHS
      - YEARS
      - DECADES
      - CENTURIES
      - MILLENNIA
      - ERAS
      - FOREVER
      type: string
  responses:
    ResponseCodeMapping400:
      description: |-
        Bad Request
        * *EXCEPTION* Exception occured. See Message for further details
    ResponseCodeMapping401:
      description: |-
        Unauthorized
        * *SESSION_PLANT_CONFLICT* The Session references another plant. It's prohibit to work on objects of other plants.
    ResponseCodeMapping403:
      description: |-
        Forbidden
        * *FORBIDDEN* The requested Task is forbidden
    ResponseCodeMapping404:
      description: |-
        Not Found
        * *NOT_FOUND* Object Not found
        * *NO_VALID_WORKSTEPS_FOUND* No valid worksteps found, either the worksteps don't exists or the worksteps are finished
        * *URL_NOT_FOUND* URL Not found
    ResponseCodeMapping405:
      description: |-
        Method Not Allowed
        * *NOT_ALLOWED* Http Method not allowed for this URL
    ResponseCodeMapping406:
      description: "Not Acceptable\n* *BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME*\
        \ Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.\n\
        * *CUSTOMER_IS_NOT_ALLOWED_FOR_EXTERNAL_PRODUCTION* A ExternalProduct Order\
        \ may not have a CustomerContact\n* *DATA_MISMATCH* Given Data don't match\
        \ with the data in the Persistence\n* *DATA_MUST_NOT_BE_CHANGED* It's not\
        \ allowed to change the given Data\n* *DELETION_NOT_ALLOWED_DUE_EXISTING_REFERENCES*\
        \ Deletion is not allowed, because the Object to delete is referenced by other\
        \ objects\n* *DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* Automatic\
        \ OrganizationUnit detection, requires only ONE OrganizationUnit assigned\
        \ at the Workstep, but multiple are assigned\n* *DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT*\
        \ Automatic OrganizationUnit detection, requires one OrganizationUnit assigned\
        \ at the Workstep, but none is assigned\n* *DIFFERENT_PRODUCER_AND_SUPPLIER_ARE_NOT_ALLOWED_FOR_EXTERNAL_PRODUCT*\
        \ A ExternalProduct Order may not have a different Supplier and ProducerContact\n\
        * *EXTERNAL_CONTACT_CHECK_NO_CONTACT_MATCHING* There is no ContactId matching\
        \ the given ContactId\n* *FIELD_UNKNOWN* Field not found in masterData\n*\
        \ *HANDLING_UNIT_IS_SINGLE_VARIETY_REQUIRED_SERIALUNIT_IS_NOT_MATCHING* Handling\
        \ Unit is single variety required. Serialunit is not matching!\n* *ID_GENERATOR_HAS_TO_HAVE_COMPONENTS*\
        \ A IdGenerator has to have at least one Component\n* *ID_MISMATCH* Id in\
        \ path and id in body don't match\n* *ID_NAME_MISMATCH* Given Id and Name,\
        \ don't match to the existing name for the id in the Persistence\n* *ILLEGAL_ARGUMENT*\
        \ A argument is not acceptable\n* *ILLEGAL_MATERIALTYPE* MaterialType is not\
        \ valid\n* *INSUFFICIENT_QUANTITY* Insufficient quantity, not usable\n* *INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP*\
        \ Workstep has an invalid bookstate at the last mandatory Workstep\n* *INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP*\
        \ A previous workstep has an invalid bookstate\n* *INVALID_DEREGISTRATION_DATE_BEFORE_REGISTERED_DATE*\
        \ The given Deregistrationdate is before the RegistrationDate\n* *INVALID_QUANTITY*\
        \ invalid quantity\n* *INVALID_STATE* State is not acceptable\n* *INVALID_UNIT*\
        \ invalid unit\n* *IS_EMPTY* A Object is NULL or empty\n* *KEY_IS_NOT_UNIQUE*\
        \ The given key is not unique in the data structure\n* *LESS_WORKSTEPS_TO_IMPORT_FOR_RELEASED_WORKORDER*\
        \ There a less Worksteps given in the Import than the current amount of Workorder\
        \ Worksteps for the Released Workorder\n* *LOCATION_IS_NOT_UNIQUE* Location\
        \ of all BomItem has to be unique within the BOM.\n* *LOCKED* Object is locked\n\
        * *MATERIALTYPE_PRODUCT_REQUIRED_FOR_THIS_OPERATION* The Part has to have\
        \ MaterialType:PRODUCT to create a BOM, Workplan or Workorder\n* *MAXIMUM_EXCEEDED*\
        \ Maximal value exceeded\n* *MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED*\
        \ Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the\
        \ current Workstep reached\n* *MAX_BOOKING_COUNT_WORKSTEP_REACHED* Maximum\
        \ allowed bookings for a Serialunit at the current Workstep reached\n* *MERGE_LOACTION_IS_ALREADY_USED*\
        \ The Location is already used by another merge\n* *MERGE_LOACTION_IS_NOT_DEFINED_IN_PARENT_BOM*\
        \ The given Location for the merge is not defined  in the Parent-BOM\n* *MERGE_PART_OF_SERIALUNIT_IS_NOT_DEFINED_IN_PARENT_BOM*\
        \ the Partnumber of the Serialunit is not defined in the Parent-BOM\n* *MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP*\
        \ There is no booking for the last mandatory workstep\n* *MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP*\
        \ There is no booking for a previous mandatory workstep\n* *MISSING_SKILL*\
        \ Required skill missing\n* *MUST_CONTAIN_AT_LEAST_ONE_ORGANIZATION_UNIT*\
        \ Workplan - The Workcenter must contain at least one OrganizationUnit.\n\
        * *NOT_AUDITED* Object is not audited\n* *NOT_UNIQUE* Items in collection\
        \ are not unique\n* *NO_COMMON_ORGANIZATIONUNIT_AT_ANY_WORKSTEP_OF_ALL_WORKORDERS_OF_THE_WORKORDERCLUSTER*\
        \ No common organizationUnit at any workstep of all workorders of the workorderCluster\n\
        * *NO_COMMON_ORGANIZATIONUNIT_AT_FIRST_WORKSTEP* No common organizationUnit\
        \ at first workstep of all workorders of the workorderCluster\n* *NO_FILTER_PARAMETER*\
        \ No Filter parameter given. Call without any Filter Condition is not allowed\n\
        * *NO_POSITION_CHANGE_OF_WORKSTEP_TO_IMPORT_FOR_RELEASED_WORKORDER* The Worksteps\
        \ given in the Import must not be change the  postions during Import for the\
        \ Released Workorder\n* *NO_WORKSTEP_WITH_SAME_NAME_FOUND_FOR_ANY_STATION*\
        \ No workstep with same name found for any station\n* *ONLY_ONE_COMPONENT_ALLOWED*\
        \ Only one Component is allowed\n* *ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP*\
        \ OrganizationUnit is not assigned to the workstep\n* *PLANNED_DELIVERY_DATE_BEFORE_PLANNED_END_DATE*\
        \ The planned delivery date must be after the planned end date.\n* *PLANNED_DELIVERY_DATE_BEFORE_PLANNED_START_DATE*\
        \ The planned delivery date must be after the planned start date.\n* *PLANNED_END_DATE_BEFORE_PLANNED_START_DATE*\
        \ The planned start date must be before the planned end date.\n* *PRODUCER_OR_SUPPLIER_ARE_NOT_ALLOWED_FOR_PRODUCTION_ORDER*\
        \ A Production Order may not have a SupplierContact or a ProducerContact only\
        \ a CusotmerContact may be given \n* *PRODUCER_OR_SUPPLIER_REQUIRED_FOR_EXTERNAL_PRODUCT*\
        \ A ExternalProduct Order requires either a SupplierContact or a ProducerContact\n\
        * *REQUIRED_VALUE_MISSING* A require value is missing\n* *SERIALUNIT_ALREADY_ASSIGNED_TO_ANOTHER_HANDLING_UNIT*\
        \ Serialunit is already assigned to another HandlingUnit\n* *SERIALUNIT_IS_ALREADY_MERGED*\
        \ Serialunit is already merged\n* *SERIALUNIT_IS_NOT_MERGED* Serialunit is\
        \ no merged\n* *SERIALUNIT_IS_SCRAP* The Serialunit is booked as SCRAP\n*\
        \ *SERIALUNIT_NOT_ASSIGNED_TO_GIVEN_HANDLINGUNIT* Serialunit is not assigned\
        \ to given HandlingUnit\n* *STATE_CHANGE_NOT_SUPPORTED* The change of the\
        \ state is not supported for the given combination\n* *STATE_INVALID_ALL_MUST_BE_RELEASED*\
        \ State invalid. All must be in State(Released)\n* *STORED* Object is stored\
        \ in\n* *TYPE_IS_NOT_SUPPORTED* The given Type is not supported\n* *WORKER_ALREADY_REGISTRED_AT_ALL_LINE_STATIONS*\
        \ the Worker is already registred at all Stations of the Line\n* *WORKER_ALREADY_REGISTRED_AT_THIS_STATION*\
        \ the Worker is already registred at the Station\n* *WORKER_IS_NOT_REGISTERED_AT_ANY_LINE_STATION*\
        \ The Worker is not registered at any Station of the Line\n* *WORKER_IS_NOT_REGISTERED_AT_THIS_STATION*\
        \ The Worker is not registered at this Station\n* *WORKORDER_WITH_TYPE_EXTERNAL_PRODUCT_IS_NOT_ALLOWED_HERE*\
        \ Workorder with type: ExternalProduct is not allowed here\n* *WORKPLAN_MUST_CONTAIN_AT_LEAST_ONE_MANDATORY_WORKSTEP*\
        \ The Workplan must contain at least one mandatory Workstep.\n* *WORKPLAN_MUST_CONTAIN_AT_LEAST_ONE_WORKSTEP*\
        \ The Workplan must contain at least one Workstep.\n* *WORKSTEP_CONFIRMATION_NUMBER_HAS_TO_BE_UNIQUE*\
        \ The confirmationNumber of a Workstep has to be unique or null\n* *WORKSTEP_NAME_AT_A_POSITION_Of_RELEASED_WORKORDER_MUST_NOT_BE_CHANGED*\
        \ Change the Name of Worksteps for a Position is not allowed\n* *WORKSTEP_NAME_HAS_TO_BE_UNIQUE*\
        \ The Name of a WorkorderWorkstep has to be unique within a Workorder\n* *WRONG_MASTERDATA_TYPE*\
        \ Field not found in masterData"
    ResponseCodeMapping409:
      description: |-
        Conflict
        * *CANNOT_BE_CREATED* Object cannot be created due missing or inconsistent data
        * *UNIQUE_KEY_ALREADY_EXISTS* There is a unique key violation, because a key defintion already exists.
    ResponseCodeMapping412:
      description: |-
        Precondition Failed
        * *VERSION_MISMATCH* Version in DB does not match given version. Reload required (Optimistic lock).
    ResponseCodeMapping417:
      description: |-
        Expectation Failed
        * *EXPECTATION_FAILED* The excpectation failed. Check invalid
        * *FINALLY_EXPIRED* finaly expired
        * *FINALLY_EXPIRED_SOON* will soon be finaly expired
        * *IN_MAINTENANCE* in maintenance
        * *SHOULD_BE_IN_MAINTENANCE* Should be in maintenance
        * *SHOULD_BE_IN_MAINTENANCE_SOON* Should be in maintenance soon (warn reached)
    ResponseCodeMapping422:
      description: |-
        Unprocessable Entity
        * *IMPORT_FAILED* Import of all Import Items failed.
    ResponseCodeMapping500:
      description: |-
        Internal Server Error
        * *SERVER_EXCEPTION* Unexpected Server Exception
    default_response:
      description: |-
        All clients using the API have to be prepared that other Http-States and failures might be reported as enlisted here.
        ReturnCodes marked with * can occure at runtime and define no specific object.
        All apis will return following json-body in case of an error and ResultHeader in case of warnings.
      headers:
        Warning:
          description: |2-

            * *BOOKINFO_IS_TOO_LONG_CUT_IT*: the given BookInfo is too long, so cut it
            * *BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL*: the BookState in the current workstep is FAIL
            * *ID_NAME_MISMATCH_USE_ID*: Given Id and Name, don't match to the existing name for the id in the Persistence, use the given ID
            * *IGNORE_DELETE_FOR_A_NONE_EXISTING_ITEM*: A Delete Request is send for a none existing Item, ignore Delete Request
            * *IS_EMPTY_USE_DEFAULT*: A Object is NULL or empty, use a default instead
            * *MORE_DATA_IS_AVAILABLE*: More data is available, but not returned due to size-restrictions
            * *NOT_ENABLED*: A Feature or Functionality is not enable, so no Data is available
            * *NOT_EXISTS_HAS_TO_BE_CREATED*: Object doesn't exists and has to be created
            * *NOT_REQUIRED*: the given Object is not required
            * *NOT_SETUP*: the given Object is not set up
            * *NOT_VALID_USE_DEFAULT*: a value is invalid, the serverside default is used instead
            * *REQUIRED_VALUE_MISSING_USE_DEFAULT*: A required value is missing, use a default instead
            * *SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION*: The given sectionReference don't match any section of the materialBin
            * *SERIALUNIT_ALREADY_ASSIGNED_TO_GIVEN_HANDLING_UNIT*: Serialunit is already assigned to given HandlingUnit
            * *SERIALUNIT_IS_ALREADY_MERGED_IMPLICIT_UNMERGE_IS_DONE*: Serialunit is already merged. Implicit unmerged Serialunit from old ParentSerialunit, than merge it to the new ParentSerialunit
            * *SERIALUNIT_NOT_ASSIGNED_TO_A_HANDLINGUNIT*: Serialunit is not assigned to a HandlingUnit
            * *SETUP*: the given Object is set up
            * *UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY*: Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
          style: simple
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GecFailure'
  parameters:
    X-PlantId:
      name: X-PlantId
      in: header
      description: UUID of the Plant. If not set the user default Plant will be used
      schema:
        $ref: '#/components/schemas/UUID'
    filterQuerySortAsc:
      name: sortASC
      in: query
      description: Sort by given fields ascending
      schema:
        type: array
        items:
          type: string
    filterQuerySortDesc:
      name: sortDESC
      in: query
      description: Sort by given fields descending
      schema:
        type: array
        items:
          type: string
    limit:
      name: limit
      in: query
      description: Paging limit
      schema:
        format: int32
        default: 100
        maximum: 1000
        minimum: 0
        type: integer
    offset:
      name: offset
      in: query
      description: Paging offset
      schema:
        format: int32
        default: 0
        minimum: 0
        type: integer
  headers:
    first:
      description: link to first page
      style: simple
      schema:
        type: string
    prev:
      description: link to previous page
      style: simple
      schema:
        type: string
    next:
      description: link to next page
      style: simple
      schema:
        type: string
    created_location:
      description: link to created entity
      style: simple
      schema:
        type: string
  securitySchemes:
    keycloak_auth:
      type: oauth2
      description: Authentication
      flows:
        implicit:
          authorizationUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/auth
          tokenUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/token
          refreshUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/token
          scopes: {}
