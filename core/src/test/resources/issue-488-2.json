{
  "openapi": "3.0.1",
  "info": {
    "title": "Test-API",
    "description": "Testdescription",
    "version": "v1"
  },
  "paths": {
    "/api/v1/test": {
      "get": {
        "tags": [
          "TestTag"
        ],
        "summary": "Retrieve a list Test objects",
        "description": "Usage with testId parameter is recommended.",
        "parameters": [
          {
            "name": "testIdWillBreak",
            "in": "query",
            "description": "rename of prop after",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Searches documents with creation date equal or younger specified timestamp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Searches documents with creation date equal or older than specified timestamp",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TestDTO": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Test": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "description": "Fill in your acquired bearer token here, must be like 'Bearer TOKEN_HERE'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "BearerAuth": [ ]
    }
  ]
}